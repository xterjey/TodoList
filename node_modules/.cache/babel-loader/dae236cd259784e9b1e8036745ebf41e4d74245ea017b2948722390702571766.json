{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/AccountSection/Notepad.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notepad = () => {\n  _s();\n  // Inisialisasi state dengan data dari localStorage jika ada\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem(\"notes\");\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  const [newNote, setNewNote] = useState(\"\");\n\n  // Efek untuk menyimpan catatan ke localStorage setiap kali notes berubah\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const addNoteHandler = () => {\n    if (newNote.trim()) {\n      const newNoteEntry = {\n        id: Date.now(),\n        content: newNote,\n        isEditing: false\n      };\n      setNotes(prevNotes => [...prevNotes, newNoteEntry]);\n      setNewNote(\"\");\n    }\n  };\n  const editNoteHandler = id => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === id ? {\n      ...note,\n      isEditing: true\n    } : note));\n  };\n  const saveNoteHandler = (id, updatedContent) => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === id ? {\n      ...note,\n      content: updatedContent,\n      isEditing: false\n    } : note));\n  };\n  const deleteNoteHandler = id => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium mb-2\",\n      children: \"Notepad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newNote,\n      onChange: handleNoteChange,\n      placeholder: \"Tulis catatanmu di sini...\",\n      className: \"w-full p-2 border rounded-md dark:bg-slate-700 dark:text-slate-200\",\n      rows: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNoteHandler,\n      className: \"mt-2 bg-blue-500 text-white px-4 py-2 rounded-md transition hover:bg-blue-600\",\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Notepad, \"VhKB1jVCgbhJzEKskZPlCdQwalM=\");\n_c = Notepad;\nexport default Notepad;\nvar _c;\n$RefreshReg$(_c, \"Notepad\");","map":{"version":3,"names":["React","useState","useEffect","Notepad","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","newNote","setNewNote","setItem","stringify","addNoteHandler","trim","newNoteEntry","id","Date","now","content","isEditing","prevNotes","editNoteHandler","map","note","saveNoteHandler","updatedContent","deleteNoteHandler","filter","handleNoteChange","event","target","value"],"sources":["/home/jayourbae/ToDo-app/src/components/AccountSection/Notepad.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\ninterface Note {\n  id: number;\n  content: string;\n  isEditing: boolean;\n}\n\nconst Notepad: React.FC = () => {\n  // Inisialisasi state dengan data dari localStorage jika ada\n  const [notes, setNotes] = useState<Note[]>(() => {\n    const savedNotes = localStorage.getItem(\"notes\");\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n\n  const [newNote, setNewNote] = useState<string>(\"\");\n\n  // Efek untuk menyimpan catatan ke localStorage setiap kali notes berubah\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNoteHandler = () => {\n    if (newNote.trim()) {\n      const newNoteEntry: Note = {\n        id: Date.now(),\n        content: newNote,\n        isEditing: false,\n      };\n      setNotes((prevNotes) => [...prevNotes, newNoteEntry]);\n      setNewNote(\"\");\n    }\n  };\n\n  const editNoteHandler = (id: number) => {\n    setNotes((prevNotes) =>\n      prevNotes.map((note) =>\n        note.id === id ? { ...note, isEditing: true } : note\n      )\n    );\n  };\n\n  const saveNoteHandler = (id: number, updatedContent: string) => {\n    setNotes((prevNotes) =>\n      prevNotes.map((note) =>\n        note.id === id ? { ...note, content: updatedContent, isEditing: false } : note\n      )\n    );\n  };\n\n  const deleteNoteHandler = (id: number) => {\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n  };\n\n  const handleNoteChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setNewNote(event.target.value);\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <h3 className=\"text-lg font-medium mb-2\">Notepad</h3>\n\n      {/* Form untuk menambahkan catatan baru */}\n      <textarea\n        value={newNote}\n        onChange={handleNoteChange}\n        placeholder=\"Tulis catatanmu di sini...\"\n        className=\"w-full p-2 border rounded-md dark:bg-slate-700 dark:text-slate-200\"\n        rows={3}\n      />\n      <button\n        onClick={addNoteHandler}\n        className=\"mt-2 bg-blue-500 text-white px-4 py-2 rounded-md transition hover:bg-blue-600\"\n      >\n        Add Note\n      </button>\n\n      {/* Tabel yang menampilkan catatan */}\n    </div>\n  );\n};\n\nexport default Notepad;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAQnD,MAAMC,OAAiB,GAAG,MAAM;EAAA;EAC9B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,MAAM;IAC/C,MAAMK,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EAEF,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACdK,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,SAAS,CAACV,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMW,cAAc,GAAG,MAAM;IAC3B,IAAIJ,OAAO,CAACK,IAAI,EAAE,EAAE;MAClB,MAAMC,YAAkB,GAAG;QACzBC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;QACdC,OAAO,EAAEV,OAAO;QAChBW,SAAS,EAAE;MACb,CAAC;MACDjB,QAAQ,CAAEkB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEN,YAAY,CAAC,CAAC;MACrDL,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMY,eAAe,GAAIN,EAAU,IAAK;IACtCb,QAAQ,CAAEkB,SAAS,IACjBA,SAAS,CAACE,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,IAAI;MAAEJ,SAAS,EAAE;IAAK,CAAC,GAAGI,IAAI,CACrD,CACF;EACH,CAAC;EAED,MAAMC,eAAe,GAAG,CAACT,EAAU,EAAEU,cAAsB,KAAK;IAC9DvB,QAAQ,CAAEkB,SAAS,IACjBA,SAAS,CAACE,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,IAAI;MAAEL,OAAO,EAAEO,cAAc;MAAEN,SAAS,EAAE;IAAM,CAAC,GAAGI,IAAI,CAC/E,CACF;EACH,CAAC;EAED,MAAMG,iBAAiB,GAAIX,EAAU,IAAK;IACxCb,QAAQ,CAAEkB,SAAS,IAAKA,SAAS,CAACO,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;EACrE,CAAC;EAED,MAAMa,gBAAgB,GAAIC,KAA6C,IAAK;IAC1EpB,UAAU,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAI,SAAS,EAAC,0BAA0B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAGrD;MACE,KAAK,EAAEvB,OAAQ;MACf,QAAQ,EAAEoB,gBAAiB;MAC3B,WAAW,EAAC,4BAA4B;MACxC,SAAS,EAAC,oEAAoE;MAC9E,IAAI,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QACR,eACF;MACE,OAAO,EAAEhB,cAAe;MACxB,SAAS,EAAC,+EAA+E;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGlF;EAAA;IAAA;IAAA;IAAA;EAAA,QAGL;AAEV,CAAC;AAAC,GAxEIZ,OAAiB;AAAA,KAAjBA,OAAiB;AA0EvB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}