{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/Routes/DoneTasks.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useCompletedTasks from \"../hooks/useCompletedTasks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoneTasks = _ref => {\n  _s();\n  let {\n    done,\n    title\n  } = _ref;\n  const tasks = useAppSelector(state => state.tasks.tasks);\n  const {\n    tasks: tasksFiltered\n  } = useCompletedTasks({\n    tasks,\n    done\n  });\n  useDescriptionTitle(\"All tasks done\", title);\n  return /*#__PURE__*/_jsxDEV(LayoutRoutes, {\n    title: title,\n    tasks: tasksFiltered\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(DoneTasks, \"m8v7G89QRvlUOqBWV5Hd71z4C74=\", false, function () {\n  return [useAppSelector, useCompletedTasks, useDescriptionTitle];\n});\n_c = DoneTasks;\nexport default DoneTasks;\nvar _c;\n$RefreshReg$(_c, \"DoneTasks\");","map":{"version":3,"names":["React","useAppSelector","useCompletedTasks","useDescriptionTitle","LayoutRoutes","DoneTasks","done","title","tasks","state","tasksFiltered"],"sources":["/home/jayourbae/ToDo-app/src/components/Routes/DoneTasks.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useCompletedTasks from \"../hooks/useCompletedTasks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst DoneTasks: React.FC<{ done: boolean; title: string }> = ({\n  done,\n  title,\n}) => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n\n  const { tasks: tasksFiltered } = useCompletedTasks({ tasks, done });\n\n  useDescriptionTitle(\"All tasks done\", title);\n\n  return <LayoutRoutes title={title} tasks={tasksFiltered}></LayoutRoutes>;\n};\n\nexport default DoneTasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AAErD,MAAMC,SAAqD,GAAG,QAGxD;EAAA;EAAA,IAHyD;IAC7DC,IAAI;IACJC;EACF,CAAC;EACC,MAAMC,KAAK,GAAGP,cAAc,CAAEQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAE1D,MAAM;IAAEA,KAAK,EAAEE;EAAc,CAAC,GAAGR,iBAAiB,CAAC;IAAEM,KAAK;IAAEF;EAAK,CAAC,CAAC;EAEnEH,mBAAmB,CAAC,gBAAgB,EAAEI,KAAK,CAAC;EAE5C,oBAAO,QAAC,YAAY;IAAC,KAAK,EAAEA,KAAM;IAAC,KAAK,EAAEG;EAAc;IAAA;IAAA;IAAA;EAAA,QAAgB;AAC1E,CAAC;AAAC,GAXIL,SAAqD;EAAA,QAI3CJ,cAAc,EAEKC,iBAAiB,EAElDC,mBAAmB;AAAA;AAAA,KARfE,SAAqD;AAa3D,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}