{"ast":null,"code":"import _slicedToArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useAppDispatch}from\"../../store/hooks\";import{modalActions}from\"../../store/Modal.store\";import useSortTasks from\"../hooks/useSortTasks\";import ButtonsSort from\"../TasksSection/ButtonsSort\";import TaskItem from\"../TasksSection/TaskItem/TaskItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LayoutRoutes=function LayoutRoutes(_ref){var title=_ref.title,tasks=_ref.tasks;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isListInView1=_useState2[0],setIsListInView1=_useState2[1];var dispatch=useAppDispatch();var _useSortTasks=useSortTasks(tasks),sortedBy=_useSortTasks.sortedBy,setSortedBy=_useSortTasks.setSortedBy,sortedTasks=_useSortTasks.sortedTasks;var openModalHandler=function openModalHandler(){dispatch(modalActions.openModalCreateTask());};var tasksTitle=\"\".concat(title,\" (\").concat(tasks.length,\" \").concat(tasks.length===1?\"task\":\"tasks\",\")\");return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\",children:tasksTitle}),/*#__PURE__*/_jsx(ButtonsSort,{isListInView1:isListInView1,setIsListInView1:setIsListInView1,sortedBy:sortedBy,setSortedBy:setSortedBy}),/*#__PURE__*/_jsxs(\"ul\",{className:\"tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 \".concat(isListInView1?\"grid-cols-1\":\"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"),children:[sortedTasks.map(function(task){return/*#__PURE__*/_jsx(TaskItem,{isListInView1:isListInView1,task:task},task.id);}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:openModalHandler,className:\"border-2 border-slate-300\\n             text-slate-400 w-full rounded-lg\\n              border-dashed transition hover:bg-slate-300\\n               hover:text-slate-500\\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 \".concat(isListInView1?\"h-20 sm:h-32\":\"h-52 sm:h-64\"),children:\"Add new task\"})})]})]});};export default/*#__PURE__*/React.memo(LayoutRoutes);","map":{"version":3,"names":["React","useState","useAppDispatch","modalActions","useSortTasks","ButtonsSort","TaskItem","LayoutRoutes","title","tasks","isListInView1","setIsListInView1","dispatch","sortedBy","setSortedBy","sortedTasks","openModalHandler","openModalCreateTask","tasksTitle","length","map","task","id","memo"],"sources":["/workspaces/TodoList/src/components/Utilities/LayoutRoutes.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Task } from \"../../interfaces\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { modalActions } from \"../../store/Modal.store\";\nimport useSortTasks from \"../hooks/useSortTasks\";\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\nimport TaskItem from \"../TasksSection/TaskItem/TaskItem\";\n\ntype Props = {\n  title: string;\n  tasks: Task[] | [];\n};\n\nconst LayoutRoutes: React.FC<Props> = ({ title, tasks }) => {\n  const [isListInView1, setIsListInView1] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  const { sortedBy, setSortedBy, sortedTasks } = useSortTasks(tasks);\n\n  const openModalHandler = () => {\n    dispatch(modalActions.openModalCreateTask());\n  };\n\n  const tasksTitle = `${title} (${tasks.length} ${\n    tasks.length === 1 ? \"task\" : \"tasks\"\n  })`;\n\n  return (\n    <section>\n      <h1 className=\"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\">\n        {tasksTitle}\n      </h1>\n      <ButtonsSort\n        isListInView1={isListInView1}\n        setIsListInView1={setIsListInView1}\n        sortedBy={sortedBy}\n        setSortedBy={setSortedBy}\n      />\n      <ul\n        className={`tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${\n          isListInView1\n            ? \"grid-cols-1\"\n            : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"\n        }`}\n      >\n        {sortedTasks.map((task) => (\n          <TaskItem key={task.id} isListInView1={isListInView1} task={task} />\n        ))}\n        <li>\n          <button\n            onClick={openModalHandler}\n            className={`border-2 border-slate-300\n             text-slate-400 w-full rounded-lg\n              border-dashed transition hover:bg-slate-300\n               hover:text-slate-500\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${\n                 isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"\n               }`}\n          >\n            Add new task\n          </button>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default React.memo(LayoutRoutes);\n"],"mappings":"0GAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,OAASC,cAAc,KAAQ,mBAAmB,CAClD,OAASC,YAAY,KAAQ,yBAAyB,CACtD,MAAOC,aAAY,KAAM,uBAAuB,CAChD,MAAOC,YAAW,KAAM,6BAA6B,CACrD,MAAOC,SAAQ,KAAM,mCAAmC,CAAC,wFAOzD,GAAMC,aAA6B,CAAG,QAAhCA,aAA6B,MAAyB,IAAnBC,MAAK,MAALA,KAAK,CAAEC,KAAK,MAALA,KAAK,CACnD,cAA0CR,QAAQ,CAAU,KAAK,CAAC,wCAA3DS,aAAa,eAAEC,gBAAgB,eAEtC,GAAMC,SAAQ,CAAGV,cAAc,EAAE,CAEjC,kBAA+CE,YAAY,CAACK,KAAK,CAAC,CAA1DI,QAAQ,eAARA,QAAQ,CAAEC,WAAW,eAAXA,WAAW,CAAEC,WAAW,eAAXA,WAAW,CAE1C,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAC7BJ,QAAQ,CAACT,YAAY,CAACc,mBAAmB,EAAE,CAAC,CAC9C,CAAC,CAED,GAAMC,WAAU,WAAMV,KAAK,cAAKC,KAAK,CAACU,MAAM,aAC1CV,KAAK,CAACU,MAAM,GAAK,CAAC,CAAG,MAAM,CAAG,OAAO,KACpC,CAEH,mBACE,wCACE,WAAI,SAAS,CAAC,2FAA2F,UACtGD,UAAU,EACR,cACL,KAAC,WAAW,EACV,aAAa,CAAER,aAAc,CAC7B,gBAAgB,CAAEC,gBAAiB,CACnC,QAAQ,CAAEE,QAAS,CACnB,WAAW,CAAEC,WAAY,EACzB,cACF,YACE,SAAS,uDACPJ,aAAa,CACT,aAAa,CACb,oFAAoF,CACvF,WAEFK,WAAW,CAACK,GAAG,CAAC,SAACC,IAAI,qBACpB,KAAC,QAAQ,EAAe,aAAa,CAAEX,aAAc,CAAC,IAAI,CAAEW,IAAK,EAAlDA,IAAI,CAACC,EAAE,CAA8C,EACrE,CAAC,cACF,iCACE,eACE,OAAO,CAAEN,gBAAiB,CAC1B,SAAS,4QAKJN,aAAa,CAAG,cAAc,CAAG,cAAc,CAC9C,0BAGC,EACN,GACF,GACG,CAEd,CAAC,CAED,2BAAeV,KAAK,CAACuB,IAAI,CAAChB,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}