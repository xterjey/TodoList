{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/Menu/Directories/ContentDirectories.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\nimport ItemDirectory from \"./ItemDirectory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContentDirectories = _ref => {\n  _s();\n  let {\n    classActive\n  } = _ref;\n  const directories = useAppSelector(store => store.tasks.directories);\n  const [modalDirIsShown, setModalDirIsShown] = useState(false);\n  const dispatch = useAppDispatch();\n  const createNewDirectoryHandler = inputValue => {\n    const newDirectoryName = inputValue.trim();\n    if (newDirectoryName.length === 0) return;\n    const directoryDoesNotExist = directories.every(dir => dir !== newDirectoryName);\n    if (directoryDoesNotExist) {\n      dispatch(tasksActions.createDirectory(newDirectoryName));\n    }\n  };\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modalDirIsShown && /*#__PURE__*/_jsxDEV(ModalDirectory, {\n      onClose: closeModalDirectoryHandler,\n      onConfirm: createNewDirectoryHandler,\n      btnText: \"Create\",\n      title: \"Create new directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"max-h-36 overflow-auto\",\n      children: directories.map(dir => /*#__PURE__*/_jsxDEV(ItemDirectory, {\n        classActive: classActive,\n        dir: dir\n      }, dir, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalDirIsShown(true),\n      className: \"px-3 py-1 border-slate-300 dark:border-slate-700 border-2 ml-9 mt-2 rounded-md border-dashed hover:text-violet-500\",\n      children: \"+ New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ContentDirectories, \"70xAY0xm0PpRl9mTcPqAIgPwNhg=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = ContentDirectories;\nexport default ContentDirectories;\nvar _c;\n$RefreshReg$(_c, \"ContentDirectories\");","map":{"version":3,"names":["React","useState","useAppDispatch","useAppSelector","tasksActions","ModalDirectory","ItemDirectory","ContentDirectories","classActive","directories","store","tasks","modalDirIsShown","setModalDirIsShown","dispatch","createNewDirectoryHandler","inputValue","newDirectoryName","trim","length","directoryDoesNotExist","every","dir","createDirectory","closeModalDirectoryHandler","map"],"sources":["/home/jayourbae/ToDo-app/src/components/Menu/Directories/ContentDirectories.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\nimport ItemDirectory from \"./ItemDirectory\";\n\nconst ContentDirectories: React.FC<{ classActive: string }> = ({\n  classActive,\n}) => {\n  const directories = useAppSelector((store) => store.tasks.directories);\n  const [modalDirIsShown, setModalDirIsShown] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  const createNewDirectoryHandler = (inputValue: string) => {\n    const newDirectoryName: string = inputValue.trim();\n\n    if (newDirectoryName.length === 0) return;\n\n    const directoryDoesNotExist = directories.every(\n      (dir: string) => dir !== newDirectoryName\n    );\n\n    if (directoryDoesNotExist) {\n      dispatch(tasksActions.createDirectory(newDirectoryName));\n    }\n  };\n\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n\n  return (\n    <>\n      {modalDirIsShown && (\n        <ModalDirectory\n          onClose={closeModalDirectoryHandler}\n          onConfirm={createNewDirectoryHandler}\n          btnText=\"Create\"\n          title=\"Create new directory\"\n        />\n      )}\n\n      <ul className=\"max-h-36 overflow-auto\">\n        {directories.map((dir: string) => (\n          <ItemDirectory key={dir} classActive={classActive} dir={dir} />\n        ))}\n      </ul>\n      <button\n        onClick={() => setModalDirIsShown(true)}\n        className=\"px-3 py-1 border-slate-300 dark:border-slate-700 border-2 ml-9 mt-2 rounded-md border-dashed hover:text-violet-500\"\n      >\n        + New\n      </button>\n    </>\n  );\n};\n\nexport default ContentDirectories;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,sBAAsB;AACrE,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAAA;AAE5C,MAAMC,kBAAqD,GAAG,QAExD;EAAA;EAAA,IAFyD;IAC7DC;EACF,CAAC;EACC,MAAMC,WAAW,GAAGN,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,WAAW,CAAC;EACtE,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAEtE,MAAMa,QAAQ,GAAGZ,cAAc,EAAE;EAEjC,MAAMa,yBAAyB,GAAIC,UAAkB,IAAK;IACxD,MAAMC,gBAAwB,GAAGD,UAAU,CAACE,IAAI,EAAE;IAElD,IAAID,gBAAgB,CAACE,MAAM,KAAK,CAAC,EAAE;IAEnC,MAAMC,qBAAqB,GAAGX,WAAW,CAACY,KAAK,CAC5CC,GAAW,IAAKA,GAAG,KAAKL,gBAAgB,CAC1C;IAED,IAAIG,qBAAqB,EAAE;MACzBN,QAAQ,CAACV,YAAY,CAACmB,eAAe,CAACN,gBAAgB,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,MAAMO,0BAA0B,GAAG,MAAM;IACvCX,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACE;IAAA,WACGD,eAAe,iBACd,QAAC,cAAc;MACb,OAAO,EAAEY,0BAA2B;MACpC,SAAS,EAAET,yBAA0B;MACrC,OAAO,EAAC,QAAQ;MAChB,KAAK,EAAC;IAAsB;MAAA;MAAA;MAAA;IAAA,QAE/B,eAED;MAAI,SAAS,EAAC,wBAAwB;MAAA,UACnCN,WAAW,CAACgB,GAAG,CAAEH,GAAW,iBAC3B,QAAC,aAAa;QAAW,WAAW,EAAEd,WAAY;QAAC,GAAG,EAAEc;MAAI,GAAxCA,GAAG;QAAA;QAAA;QAAA;MAAA,QACxB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MACE,OAAO,EAAE,MAAMT,kBAAkB,CAAC,IAAI,CAAE;MACxC,SAAS,EAAC,oHAAoH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGvH;EAAA,gBACR;AAEP,CAAC;AAAC,GAlDIN,kBAAqD;EAAA,QAGrCJ,cAAc,EAGjBD,cAAc;AAAA;AAAA,KAN3BK,kBAAqD;AAoD3D,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}