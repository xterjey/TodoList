{"ast":null,"code":"import React from\"react\";import{useAppDispatch}from\"../../../store/hooks\";import{tasksActions}from\"../../../store/Tasks.store\";import{ReactComponent as SvgX}from\"../../../assets/x.svg\";import{ReactComponent as Check}from\"../../../assets/check.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BtnToggleCompleted=function BtnToggleCompleted(_ref){var taskCompleted=_ref.taskCompleted,taskId=_ref.taskId,isListInView1=_ref.isListInView1;var dispatch=useAppDispatch();var toggleTaskCompleted=function toggleTaskCompleted(id){dispatch(tasksActions.toggleTaskCompleted(id));};return/*#__PURE__*/_jsxs(\"button\",{title:taskCompleted?\"mark as uncompleted\":\"mark as completed\",className:\"\".concat(taskCompleted?\"bg-emerald-200 text-emerald-800 \":\"bg-amber-200 text-amber-800 \",\" \").concat(isListInView1?\"mr-4\":\"mr-4 order-0\",\" rounded-full font-medium\"),onClick:function onClick(){return toggleTaskCompleted(taskId);},children:[/*#__PURE__*/_jsx(\"span\",{className:\"block py-1 px-3 absolute invisible sm:static sm:visible\",children:taskCompleted?\"completed\":\"uncompleted\"}),/*#__PURE__*/_jsx(\"span\",{className:\" sm:hidden w-6 h-6 grid place-items-center\",children:taskCompleted?/*#__PURE__*/_jsx(Check,{className:\"w-3 h-3\"}):/*#__PURE__*/_jsx(SvgX,{className:\"w-3 h-3\"})})]});};export default/*#__PURE__*/React.memo(BtnToggleCompleted);","map":{"version":3,"names":["React","useAppDispatch","tasksActions","ReactComponent","SvgX","Check","BtnToggleCompleted","taskCompleted","taskId","isListInView1","dispatch","toggleTaskCompleted","id","memo"],"sources":["/workspaces/TodoList/src/components/TasksSection/TaskItem/BtnToggleCompleted.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as SvgX } from \"../../../assets/x.svg\";\nimport { ReactComponent as Check } from \"../../../assets/check.svg\";\n\nconst BtnToggleCompleted: React.FC<{\n  taskCompleted: boolean;\n  taskId: string;\n  isListInView1: boolean;\n}> = ({ taskCompleted, taskId, isListInView1 }) => {\n  const dispatch = useAppDispatch();\n\n  const toggleTaskCompleted = (id: string) => {\n    dispatch(tasksActions.toggleTaskCompleted(id));\n  };\n\n  return (\n    <button\n      title={taskCompleted ? \"mark as uncompleted\" : \"mark as completed\"}\n      className={`${\n        taskCompleted\n          ? \"bg-emerald-200 text-emerald-800 \"\n          : \"bg-amber-200 text-amber-800 \"\n      } ${isListInView1 ? \"mr-4\" : \"mr-4 order-0\"} rounded-full font-medium`}\n      onClick={() => toggleTaskCompleted(taskId)}\n    >\n      <span className=\"block py-1 px-3 absolute invisible sm:static sm:visible\">\n        {taskCompleted ? \"completed\" : \"uncompleted\"}\n      </span>\n      <span className=\" sm:hidden w-6 h-6 grid place-items-center\">\n        {taskCompleted ? (\n          <Check className=\"w-3 h-3\" />\n        ) : (\n          <SvgX className=\"w-3 h-3\" />\n        )}\n      </span>\n    </button>\n  );\n};\n\nexport default React.memo(BtnToggleCompleted);\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,sBAAsB,CACrD,OAASC,YAAY,KAAQ,4BAA4B,CACzD,OAASC,cAAc,GAAIC,KAAI,KAAQ,uBAAuB,CAC9D,OAASD,cAAc,GAAIE,MAAK,KAAQ,2BAA2B,CAAC,wFAEpE,GAAMC,mBAIJ,CAAG,QAJCA,mBAIJ,MAAiD,IAA3CC,cAAa,MAAbA,aAAa,CAAEC,MAAM,MAANA,MAAM,CAAEC,aAAa,MAAbA,aAAa,CAC1C,GAAMC,SAAQ,CAAGT,cAAc,EAAE,CAEjC,GAAMU,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIC,EAAU,CAAK,CAC1CF,QAAQ,CAACR,YAAY,CAACS,mBAAmB,CAACC,EAAE,CAAC,CAAC,CAChD,CAAC,CAED,mBACE,gBACE,KAAK,CAAEL,aAAa,CAAG,qBAAqB,CAAG,mBAAoB,CACnE,SAAS,WACPA,aAAa,CACT,kCAAkC,CAClC,8BAA8B,aAChCE,aAAa,CAAG,MAAM,CAAG,cAAc,6BAA4B,CACvE,OAAO,CAAE,yBAAME,oBAAmB,CAACH,MAAM,CAAC,EAAC,wBAE3C,aAAM,SAAS,CAAC,yDAAyD,UACtED,aAAa,CAAG,WAAW,CAAG,aAAa,EACvC,cACP,aAAM,SAAS,CAAC,4CAA4C,UACzDA,aAAa,cACZ,KAAC,KAAK,EAAC,SAAS,CAAC,SAAS,EAAG,cAE7B,KAAC,IAAI,EAAC,SAAS,CAAC,SAAS,EAC1B,EACI,GACA,CAEb,CAAC,CAED,2BAAeP,KAAK,CAACa,IAAI,CAACP,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}