{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/Utilities/LayoutRoutes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { modalActions } from \"../../store/Modal.store\";\nimport useSortTasks from \"../hooks/useSortTasks\";\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\nimport TaskItem from \"../TasksSection/TaskItem/TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutRoutes = _ref => {\n  _s();\n  let {\n    title,\n    tasks\n  } = _ref;\n  const [isListInView1, setIsListInView1] = useState(false);\n  const dispatch = useAppDispatch();\n  const {\n    sortedBy,\n    setSortedBy,\n    sortedTasks\n  } = useSortTasks(tasks);\n  const openModalHandler = () => {\n    dispatch(modalActions.openModalCreateTask());\n  };\n  const tasksTitle = `${title} (${tasks.length} ${tasks.length === 1 ? \"task\" : \"tasks\"})`;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\",\n      children: tasksTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsSort, {\n      isListInView1: isListInView1,\n      setIsListInView1: setIsListInView1,\n      sortedBy: sortedBy,\n      setSortedBy: setSortedBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${isListInView1 ? \"grid-cols-1\" : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"}`,\n      children: [sortedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        isListInView1: isListInView1,\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openModalHandler,\n          className: `border-2 border-slate-300\n             text-slate-400 w-full rounded-lg\n              border-dashed transition hover:bg-slate-300\n               hover:text-slate-500\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"}`,\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutRoutes, \"kAN3Em61HEe9l5Ont0XTlgABoCg=\", false, function () {\n  return [useAppDispatch, useSortTasks];\n});\n_c = LayoutRoutes;\nexport default _c2 = /*#__PURE__*/React.memo(LayoutRoutes);\nvar _c, _c2;\n$RefreshReg$(_c, \"LayoutRoutes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useAppDispatch","modalActions","useSortTasks","ButtonsSort","TaskItem","LayoutRoutes","title","tasks","isListInView1","setIsListInView1","dispatch","sortedBy","setSortedBy","sortedTasks","openModalHandler","openModalCreateTask","tasksTitle","length","map","task","id","memo"],"sources":["/home/jayourbae/ToDo-app/src/components/Utilities/LayoutRoutes.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Task } from \"../../interfaces\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { modalActions } from \"../../store/Modal.store\";\nimport useSortTasks from \"../hooks/useSortTasks\";\nimport ButtonsSort from \"../TasksSection/ButtonsSort\";\nimport TaskItem from \"../TasksSection/TaskItem/TaskItem\";\n\ntype Props = {\n  title: string;\n  tasks: Task[] | [];\n};\n\nconst LayoutRoutes: React.FC<Props> = ({ title, tasks }) => {\n  const [isListInView1, setIsListInView1] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  const { sortedBy, setSortedBy, sortedTasks } = useSortTasks(tasks);\n\n  const openModalHandler = () => {\n    dispatch(modalActions.openModalCreateTask());\n  };\n\n  const tasksTitle = `${title} (${tasks.length} ${\n    tasks.length === 1 ? \"task\" : \"tasks\"\n  })`;\n\n  return (\n    <section>\n      <h1 className=\"font-medium my-5 text-center sm:text-left sm:my-8 md:text-2xl text-lg dark:text-slate-200\">\n        {tasksTitle}\n      </h1>\n      <ButtonsSort\n        isListInView1={isListInView1}\n        setIsListInView1={setIsListInView1}\n        sortedBy={sortedBy}\n        setSortedBy={setSortedBy}\n      />\n      <ul\n        className={`tasksList mt-4 grid gap-2 sm:gap-4 xl:gap-6 ${\n          isListInView1\n            ? \"grid-cols-1\"\n            : \"2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-4 md:grid-cols-3 grid-cols-2 items-end\"\n        }`}\n      >\n        {sortedTasks.map((task) => (\n          <TaskItem key={task.id} isListInView1={isListInView1} task={task} />\n        ))}\n        <li>\n          <button\n            onClick={openModalHandler}\n            className={`border-2 border-slate-300\n             text-slate-400 w-full rounded-lg\n              border-dashed transition hover:bg-slate-300\n               hover:text-slate-500\n               dark:border-slate-700 dark:hover:bg-slate-800 dark:hover:text-slate-300 ${\n                 isListInView1 ? \"h-20 sm:h-32\" : \"h-52 sm:h-64\"\n               }`}\n          >\n            Add new task\n          </button>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nexport default React.memo(LayoutRoutes);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,QAAQ,MAAM,mCAAmC;AAAC;AAOzD,MAAMC,YAA6B,GAAG,QAAsB;EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAM,CAAC;EACrD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EAElE,MAAMW,QAAQ,GAAGV,cAAc,EAAE;EAEjC,MAAM;IAAEW,QAAQ;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGX,YAAY,CAACK,KAAK,CAAC;EAElE,MAAMO,gBAAgB,GAAG,MAAM;IAC7BJ,QAAQ,CAACT,YAAY,CAACc,mBAAmB,EAAE,CAAC;EAC9C,CAAC;EAED,MAAMC,UAAU,GAAI,GAAEV,KAAM,KAAIC,KAAK,CAACU,MAAO,IAC3CV,KAAK,CAACU,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAC/B,GAAE;EAEH,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,2FAA2F;MAAA,UACtGD;IAAU;MAAA;MAAA;MAAA;IAAA,QACR,eACL,QAAC,WAAW;MACV,aAAa,EAAER,aAAc;MAC7B,gBAAgB,EAAEC,gBAAiB;MACnC,QAAQ,EAAEE,QAAS;MACnB,WAAW,EAAEC;IAAY;MAAA;MAAA;MAAA;IAAA,QACzB,eACF;MACE,SAAS,EAAG,+CACVJ,aAAa,GACT,aAAa,GACb,oFACL,EAAE;MAAA,WAEFK,WAAW,CAACK,GAAG,CAAEC,IAAI,iBACpB,QAAC,QAAQ;QAAe,aAAa,EAAEX,aAAc;QAAC,IAAI,EAAEW;MAAK,GAAlDA,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QACvB,CAAC,eACF;QAAA,uBACE;UACE,OAAO,EAAEN,gBAAiB;UAC1B,SAAS,EAAG;AACxB;AACA;AACA;AACA,yFACiBN,aAAa,GAAG,cAAc,GAAG,cAClC,EAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGC;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEd,CAAC;AAAC,GArDIH,YAA6B;EAAA,QAGhBL,cAAc,EAEgBE,YAAY;AAAA;AAAA,KALvDG,YAA6B;AAuDnC,kCAAeP,KAAK,CAACuB,IAAI,CAAChB,YAAY,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}