{"ast":null,"code":"import _slicedToArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import{useAppSelector}from\"../../store/hooks\";import useDescriptionTitle from\"../hooks/useDescriptionTitle\";import LayoutRoutes from\"../Utilities/LayoutRoutes\";import{jsx as _jsx}from\"react/jsx-runtime\";var Directory=function Directory(){var tasks=useAppSelector(function(state){return state.tasks.tasks;});var directories=useAppSelector(function(state){return state.tasks.directories;});var params=useParams();var navigate=useNavigate();useDescriptionTitle(\"Tasks in \\\"\".concat(params.dir,\"\\\"\"),params.dir?params.dir+\" directory\":\"\");var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasksInCurrentDirectory=_useState2[0],setTasksInCurrentDirectory=_useState2[1];useEffect(function(){var dirExists=directories.includes(params.dir);if(!dirExists){navigate(\"/\");}var tasksFiltered=tasks.filter(function(task){return task.dir===params.dir;});setTasksInCurrentDirectory(tasksFiltered);},[directories,navigate,params.dir,tasks]);return/*#__PURE__*/_jsx(LayoutRoutes,{title:\"\".concat(params.dir,\"'s tasks\"),tasks:tasksInCurrentDirectory});};export default Directory;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useAppSelector","useDescriptionTitle","LayoutRoutes","Directory","tasks","state","directories","params","navigate","dir","tasksInCurrentDirectory","setTasksInCurrentDirectory","dirExists","includes","tasksFiltered","filter","task"],"sources":["/workspaces/TodoList/src/components/Routes/Directory.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Task } from \"../../interfaces\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst Directory: React.FC = () => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n  const directories = useAppSelector((state) => state.tasks.directories);\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useDescriptionTitle(\n    `Tasks in \"${params.dir}\"`,\n    params.dir ? params.dir + \" directory\" : \"\"\n  );\n\n  const [tasksInCurrentDirectory, setTasksInCurrentDirectory] = useState<\n    Task[]\n  >([]);\n\n  useEffect(() => {\n    const dirExists = directories.includes(params.dir);\n    if (!dirExists) {\n      navigate(\"/\");\n    }\n    const tasksFiltered = tasks.filter((task: Task) => task.dir === params.dir);\n    setTasksInCurrentDirectory(tasksFiltered);\n  }, [directories, navigate, params.dir, tasks]);\n\n  return (\n    <LayoutRoutes\n      title={`${params.dir}'s tasks`}\n      tasks={tasksInCurrentDirectory}\n    />\n  );\n};\n\nexport default Directory;\n"],"mappings":"0GAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CAEzD,OAASC,cAAc,KAAQ,mBAAmB,CAClD,MAAOC,oBAAmB,KAAM,8BAA8B,CAC9D,MAAOC,aAAY,KAAM,2BAA2B,CAAC,2CAErD,GAAMC,UAAmB,CAAG,QAAtBA,UAAmB,EAAS,CAChC,GAAMC,MAAK,CAAGJ,cAAc,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACD,KAAK,CAACA,KAAK,GAAC,CAC1D,GAAME,YAAW,CAAGN,cAAc,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACD,KAAK,CAACE,WAAW,GAAC,CACtE,GAAMC,OAAM,CAAGR,SAAS,EAAE,CAC1B,GAAMS,SAAQ,CAAGV,WAAW,EAAE,CAE9BG,mBAAmB,sBACJM,MAAM,CAACE,GAAG,OACvBF,MAAM,CAACE,GAAG,CAAGF,MAAM,CAACE,GAAG,CAAG,YAAY,CAAG,EAAE,CAC5C,CAED,cAA8DZ,QAAQ,CAEpE,EAAE,CAAC,wCAFEa,uBAAuB,eAAEC,0BAA0B,eAI1Df,SAAS,CAAC,UAAM,CACd,GAAMgB,UAAS,CAAGN,WAAW,CAACO,QAAQ,CAACN,MAAM,CAACE,GAAG,CAAC,CAClD,GAAI,CAACG,SAAS,CAAE,CACdJ,QAAQ,CAAC,GAAG,CAAC,CACf,CACA,GAAMM,cAAa,CAAGV,KAAK,CAACW,MAAM,CAAC,SAACC,IAAU,QAAKA,KAAI,CAACP,GAAG,GAAKF,MAAM,CAACE,GAAG,GAAC,CAC3EE,0BAA0B,CAACG,aAAa,CAAC,CAC3C,CAAC,CAAE,CAACR,WAAW,CAAEE,QAAQ,CAAED,MAAM,CAACE,GAAG,CAAEL,KAAK,CAAC,CAAC,CAE9C,mBACE,KAAC,YAAY,EACX,KAAK,WAAKG,MAAM,CAACE,GAAG,YAAW,CAC/B,KAAK,CAAEC,uBAAwB,EAC/B,CAEN,CAAC,CAED,cAAeP,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}