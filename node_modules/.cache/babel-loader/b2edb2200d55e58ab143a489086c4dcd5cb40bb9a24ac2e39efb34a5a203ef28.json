{"ast":null,"code":"import{configureStore}from\"@reduxjs/toolkit\";import tasksReducer,{tasksMiddleware}from\"./Tasks.store\";import modalReducer from\"./Modal.store\";import menuReducer from\"./Menu.store\";var store=configureStore({reducer:{tasks:tasksReducer,modal:modalReducer,menu:menuReducer},middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware().concat(tasksMiddleware);}});export default store;","map":{"version":3,"names":["configureStore","tasksReducer","tasksMiddleware","modalReducer","menuReducer","store","reducer","tasks","modal","menu","middleware","getDefaultMiddleware","concat"],"sources":["/workspaces/TodoList/src/store/index.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer, { tasksMiddleware } from \"./Tasks.store\";\nimport modalReducer from \"./Modal.store\";\nimport menuReducer from \"./Menu.store\";\n\nconst store = configureStore({\n  reducer: { tasks: tasksReducer, modal: modalReducer, menu: menuReducer },\n  middleware: (getDefaultMiddleware: any) =>\n    getDefaultMiddleware().concat(tasksMiddleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AddDispatch = typeof store.dispatch;\nexport default store;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAOC,aAAY,EAAIC,eAAe,KAAQ,eAAe,CAC7D,MAAOC,aAAY,KAAM,eAAe,CACxC,MAAOC,YAAW,KAAM,cAAc,CAEtC,GAAMC,MAAK,CAAGL,cAAc,CAAC,CAC3BM,OAAO,CAAE,CAAEC,KAAK,CAAEN,YAAY,CAAEO,KAAK,CAAEL,YAAY,CAAEM,IAAI,CAAEL,WAAY,CAAC,CACxEM,UAAU,CAAE,oBAACC,oBAAyB,QACpCA,qBAAoB,EAAE,CAACC,MAAM,CAACV,eAAe,CAAC,EAClD,CAAC,CAAC,CAIF,cAAeG,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}