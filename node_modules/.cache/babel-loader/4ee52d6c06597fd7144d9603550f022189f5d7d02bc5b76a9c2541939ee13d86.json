{"ast":null,"code":"import _slicedToArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import{useAppSelector}from\"../../store/hooks\";import useDescriptionTitle from\"../hooks/useDescriptionTitle\";import LayoutRoutes from\"../Utilities/LayoutRoutes\";import{jsx as _jsx}from\"react/jsx-runtime\";var TaskOnly=function TaskOnly(){var params=useParams();var navigate=useNavigate();var tasks=useAppSelector(function(store){return store.tasks.tasks;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),matchedTask=_useState2[0],setMatchedTask=_useState2[1];useEffect(function(){var taskId=params.taskId;var filteredTask=tasks.filter(function(task){return taskId===task.id;});if(!filteredTask.length){navigate(\"/\");}setMatchedTask(filteredTask);},[navigate,params.taskId,tasks]);var title=matchedTask.length?matchedTask[0].title:\"\";useDescriptionTitle(\"Searching for \".concat(title),\"Task \"+title);return/*#__PURE__*/_jsx(LayoutRoutes,{title:title,tasks:matchedTask});};export default TaskOnly;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useAppSelector","useDescriptionTitle","LayoutRoutes","TaskOnly","params","navigate","tasks","store","matchedTask","setMatchedTask","taskId","filteredTask","filter","task","id","length","title"],"sources":["/workspaces/TodoList/src/components/Routes/TaskOnly.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Task } from \"../../interfaces\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst TaskOnly: React.FC = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const tasks = useAppSelector((store) => store.tasks.tasks);\n\n  const [matchedTask, setMatchedTask] = useState<Task[]>([]);\n\n  useEffect(() => {\n    const taskId = params.taskId;\n    const filteredTask = tasks.filter((task: Task) => taskId === task.id);\n    if (!filteredTask.length) {\n      navigate(\"/\");\n    }\n    setMatchedTask(filteredTask);\n  }, [navigate, params.taskId, tasks]);\n\n  const title = matchedTask.length ? matchedTask[0].title : \"\";\n\n  useDescriptionTitle(`Searching for ${title}`, \"Task \" + title);\n\n  return <LayoutRoutes title={title} tasks={matchedTask} />;\n};\n\nexport default TaskOnly;\n"],"mappings":"0GAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CAEzD,OAASC,cAAc,KAAQ,mBAAmB,CAClD,MAAOC,oBAAmB,KAAM,8BAA8B,CAC9D,MAAOC,aAAY,KAAM,2BAA2B,CAAC,2CAErD,GAAMC,SAAkB,CAAG,QAArBA,SAAkB,EAAS,CAC/B,GAAMC,OAAM,CAAGL,SAAS,EAAE,CAC1B,GAAMM,SAAQ,CAAGP,WAAW,EAAE,CAE9B,GAAMQ,MAAK,CAAGN,cAAc,CAAC,SAACO,KAAK,QAAKA,MAAK,CAACD,KAAK,CAACA,KAAK,GAAC,CAE1D,cAAsCV,QAAQ,CAAS,EAAE,CAAC,wCAAnDY,WAAW,eAAEC,cAAc,eAElCZ,SAAS,CAAC,UAAM,CACd,GAAMa,OAAM,CAAGN,MAAM,CAACM,MAAM,CAC5B,GAAMC,aAAY,CAAGL,KAAK,CAACM,MAAM,CAAC,SAACC,IAAU,QAAKH,OAAM,GAAKG,IAAI,CAACC,EAAE,GAAC,CACrE,GAAI,CAACH,YAAY,CAACI,MAAM,CAAE,CACxBV,QAAQ,CAAC,GAAG,CAAC,CACf,CACAI,cAAc,CAACE,YAAY,CAAC,CAC9B,CAAC,CAAE,CAACN,QAAQ,CAAED,MAAM,CAACM,MAAM,CAAEJ,KAAK,CAAC,CAAC,CAEpC,GAAMU,MAAK,CAAGR,WAAW,CAACO,MAAM,CAAGP,WAAW,CAAC,CAAC,CAAC,CAACQ,KAAK,CAAG,EAAE,CAE5Df,mBAAmB,yBAAkBe,KAAK,EAAI,OAAO,CAAGA,KAAK,CAAC,CAE9D,mBAAO,KAAC,YAAY,EAAC,KAAK,CAAEA,KAAM,CAAC,KAAK,CAAER,WAAY,EAAG,CAC3D,CAAC,CAED,cAAeL,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}