{"ast":null,"code":"import _slicedToArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useAppDispatch,useAppSelector}from\"../../../store/hooks\";import{tasksActions}from\"../../../store/Tasks.store\";import ModalDirectory from\"../../Utilities/ModalDirectory\";import ItemDirectory from\"./ItemDirectory\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContentDirectories=function ContentDirectories(_ref){var classActive=_ref.classActive;var directories=useAppSelector(function(store){return store.tasks.directories;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalDirIsShown=_useState2[0],setModalDirIsShown=_useState2[1];var dispatch=useAppDispatch();var createNewDirectoryHandler=function createNewDirectoryHandler(inputValue){var newDirectoryName=inputValue.trim();if(newDirectoryName.length===0)return;var directoryDoesNotExist=directories.every(function(dir){return dir!==newDirectoryName;});if(directoryDoesNotExist){dispatch(tasksActions.createDirectory(newDirectoryName));}};var closeModalDirectoryHandler=function closeModalDirectoryHandler(){setModalDirIsShown(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[modalDirIsShown&&/*#__PURE__*/_jsx(ModalDirectory,{onClose:closeModalDirectoryHandler,onConfirm:createNewDirectoryHandler,btnText:\"Create\",title:\"Create new directory\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"max-h-36 overflow-auto\",children:directories.map(function(dir){return/*#__PURE__*/_jsx(ItemDirectory,{classActive:classActive,dir:dir},dir);})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setModalDirIsShown(true);},className:\"px-3 py-1 border-slate-300 dark:border-slate-700 border-2 ml-9 mt-2 rounded-md border-dashed hover:text-violet-500\",children:\"+ New\"})]});};export default ContentDirectories;","map":{"version":3,"names":["React","useState","useAppDispatch","useAppSelector","tasksActions","ModalDirectory","ItemDirectory","ContentDirectories","classActive","directories","store","tasks","modalDirIsShown","setModalDirIsShown","dispatch","createNewDirectoryHandler","inputValue","newDirectoryName","trim","length","directoryDoesNotExist","every","dir","createDirectory","closeModalDirectoryHandler","map"],"sources":["/workspaces/TodoList/src/components/Menu/Directories/ContentDirectories.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\nimport ItemDirectory from \"./ItemDirectory\";\n\nconst ContentDirectories: React.FC<{ classActive: string }> = ({\n  classActive,\n}) => {\n  const directories = useAppSelector((store) => store.tasks.directories);\n  const [modalDirIsShown, setModalDirIsShown] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n\n  const createNewDirectoryHandler = (inputValue: string) => {\n    const newDirectoryName: string = inputValue.trim();\n\n    if (newDirectoryName.length === 0) return;\n\n    const directoryDoesNotExist = directories.every(\n      (dir: string) => dir !== newDirectoryName\n    );\n\n    if (directoryDoesNotExist) {\n      dispatch(tasksActions.createDirectory(newDirectoryName));\n    }\n  };\n\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n\n  return (\n    <>\n      {modalDirIsShown && (\n        <ModalDirectory\n          onClose={closeModalDirectoryHandler}\n          onConfirm={createNewDirectoryHandler}\n          btnText=\"Create\"\n          title=\"Create new directory\"\n        />\n      )}\n\n      <ul className=\"max-h-36 overflow-auto\">\n        {directories.map((dir: string) => (\n          <ItemDirectory key={dir} classActive={classActive} dir={dir} />\n        ))}\n      </ul>\n      <button\n        onClick={() => setModalDirIsShown(true)}\n        className=\"px-3 py-1 border-slate-300 dark:border-slate-700 border-2 ml-9 mt-2 rounded-md border-dashed hover:text-violet-500\"\n      >\n        + New\n      </button>\n    </>\n  );\n};\n\nexport default ContentDirectories;\n"],"mappings":"0GAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,cAAc,CAAEC,cAAc,KAAQ,sBAAsB,CACrE,OAASC,YAAY,KAAQ,4BAA4B,CACzD,MAAOC,eAAc,KAAM,gCAAgC,CAC3D,MAAOC,cAAa,KAAM,iBAAiB,CAAC,6IAE5C,GAAMC,mBAAqD,CAAG,QAAxDA,mBAAqD,MAErD,IADJC,YAAW,MAAXA,WAAW,CAEX,GAAMC,YAAW,CAAGN,cAAc,CAAC,SAACO,KAAK,QAAKA,MAAK,CAACC,KAAK,CAACF,WAAW,GAAC,CACtE,cAA8CR,QAAQ,CAAU,KAAK,CAAC,wCAA/DW,eAAe,eAAEC,kBAAkB,eAE1C,GAAMC,SAAQ,CAAGZ,cAAc,EAAE,CAEjC,GAAMa,0BAAyB,CAAG,QAA5BA,0BAAyB,CAAIC,UAAkB,CAAK,CACxD,GAAMC,iBAAwB,CAAGD,UAAU,CAACE,IAAI,EAAE,CAElD,GAAID,gBAAgB,CAACE,MAAM,GAAK,CAAC,CAAE,OAEnC,GAAMC,sBAAqB,CAAGX,WAAW,CAACY,KAAK,CAC7C,SAACC,GAAW,QAAKA,IAAG,GAAKL,gBAAgB,GAC1C,CAED,GAAIG,qBAAqB,CAAE,CACzBN,QAAQ,CAACV,YAAY,CAACmB,eAAe,CAACN,gBAAgB,CAAC,CAAC,CAC1D,CACF,CAAC,CAED,GAAMO,2BAA0B,CAAG,QAA7BA,2BAA0B,EAAS,CACvCX,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAED,mBACE,2BACGD,eAAe,eACd,KAAC,cAAc,EACb,OAAO,CAAEY,0BAA2B,CACpC,SAAS,CAAET,yBAA0B,CACrC,OAAO,CAAC,QAAQ,CAChB,KAAK,CAAC,sBAAsB,EAE/B,cAED,WAAI,SAAS,CAAC,wBAAwB,UACnCN,WAAW,CAACgB,GAAG,CAAC,SAACH,GAAW,qBAC3B,KAAC,aAAa,EAAW,WAAW,CAAEd,WAAY,CAAC,GAAG,CAAEc,GAAI,EAAxCA,GAAG,CAAwC,EAChE,CAAC,EACC,cACL,eACE,OAAO,CAAE,yBAAMT,mBAAkB,CAAC,IAAI,CAAC,EAAC,CACxC,SAAS,CAAC,oHAAoH,mBAGvH,GACR,CAEP,CAAC,CAED,cAAeN,mBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}