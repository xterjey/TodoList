{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer, { tasksMiddleware } from \"./Tasks.store\";\nimport modalReducer from \"./Modal.store\";\nimport menuReducer from \"./Menu.store\";\nconst store = configureStore({\n  reducer: {\n    tasks: tasksReducer,\n    modal: modalReducer,\n    menu: menuReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(tasksMiddleware)\n});\nexport default store;","map":{"version":3,"names":["configureStore","tasksReducer","tasksMiddleware","modalReducer","menuReducer","store","reducer","tasks","modal","menu","middleware","getDefaultMiddleware","concat"],"sources":["/home/jayourbae/ToDo-app/src/store/index.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer, { tasksMiddleware } from \"./Tasks.store\";\nimport modalReducer from \"./Modal.store\";\nimport menuReducer from \"./Menu.store\";\n\nconst store = configureStore({\n  reducer: { tasks: tasksReducer, modal: modalReducer, menu: menuReducer },\n  middleware: (getDefaultMiddleware: any) =>\n    getDefaultMiddleware().concat(tasksMiddleware),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AddDispatch = typeof store.dispatch;\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,IAAIC,eAAe,QAAQ,eAAe;AAC7D,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,WAAW,MAAM,cAAc;AAEtC,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAAE;IAAEC,KAAK,EAAEN,YAAY;IAAEO,KAAK,EAAEL,YAAY;IAAEM,IAAI,EAAEL;EAAY,CAAC;EACxEM,UAAU,EAAGC,oBAAyB,IACpCA,oBAAoB,EAAE,CAACC,MAAM,CAACV,eAAe;AACjD,CAAC,CAAC;AAIF,eAAeG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}