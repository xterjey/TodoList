{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\nimport IconLink from \"./IconLink\"; // Import the IconLink component\n\n// Function to format the timer in hours:minutes:seconds\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = totalSeconds => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor(totalSeconds % 3600 / 60);\n  const seconds = totalSeconds % 60;\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n};\nconst InfosTask = _ref => {\n  _s();\n  let {\n    task,\n    isListInView1\n  } = _ref;\n  const [remainingTime, setRemainingTime] = useState(0);\n  const dateFormatted = useDate(task.date || \"\"); // Handle empty date\n\n  useEffect(() => {\n    const key = `endTime_${task.title}`;\n    const savedEndTime = localStorage.getItem(key);\n    if (task.timer) {\n      let endTime;\n      if (savedEndTime) {\n        endTime = parseInt(savedEndTime, 10);\n      } else {\n        endTime = Date.now() + task.timer * 3600000; // Convert hours to milliseconds\n        localStorage.setItem(key, endTime.toString());\n      }\n      const updateTimer = () => {\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        setRemainingTime(timeLeft);\n\n        // Clear localStorage if timer expires\n        if (timeLeft <= 0) {\n          localStorage.removeItem(key);\n        }\n      };\n\n      // Initial update\n      updateTimer();\n\n      // Update every second\n      const intervalId = setInterval(updateTimer, 1000);\n\n      // Clear interval on component unmount\n      return () => clearInterval(intervalId);\n    }\n  }, [task.timer, task.title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col ${isListInView1 ? \"mr-6\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-2\",\n      children: [dateFormatted && /*#__PURE__*/_jsxDEV(\"time\", {\n        className: \"flex items-center mb-1 text-slate-500 dark:text-slate-400\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"mr-2 w-4 sm:w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" \", dateFormatted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block font-medium dark:text-slate-200\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), task.link && /*#__PURE__*/_jsxDEV(IconLink, {\n      link: task.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this), task.link1 && /*#__PURE__*/_jsxDEV(IconLink, {\n      link: task.link1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }, this), task.link2 && /*#__PURE__*/_jsxDEV(IconLink, {\n      link: task.link2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }, this), task.link3 && /*#__PURE__*/_jsxDEV(IconLink, {\n      link: task.link3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }, this), task.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-slate-500 dark:text-slate-400\",\n        children: \"Timer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: formatTime(remainingTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(InfosTask, \"a3Njjlt9F/wCB/vdpRTEoD9mcGc=\", false, function () {\n  return [useDate];\n});\n_c = InfosTask;\nexport default InfosTask;\nvar _c;\n$RefreshReg$(_c, \"InfosTask\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","Calendar","useDate","IconLink","formatTime","totalSeconds","hours","Math","floor","minutes","seconds","String","padStart","InfosTask","task","isListInView1","remainingTime","setRemainingTime","dateFormatted","date","key","title","savedEndTime","localStorage","getItem","timer","endTime","parseInt","Date","now","setItem","toString","updateTimer","timeLeft","max","removeItem","intervalId","setInterval","clearInterval","link","link1","link2","link3"],"sources":["/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Task } from \"../../../interfaces\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\nimport IconLink from \"./IconLink\"; // Import the IconLink component\n\n// Function to format the timer in hours:minutes:seconds\nconst formatTime = (totalSeconds: number) => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n};\n\nconst InfosTask: React.FC<{ task: Task; isListInView1: boolean }> = ({\n  task,\n  isListInView1,\n}) => {\n  const [remainingTime, setRemainingTime] = useState<number>(0);\n  const dateFormatted = useDate(task.date || \"\"); // Handle empty date\n\n  useEffect(() => {\n    const key = `endTime_${task.title}`;\n    const savedEndTime = localStorage.getItem(key);\n    \n    if (task.timer) {\n      let endTime: number;\n\n      if (savedEndTime) {\n        endTime = parseInt(savedEndTime, 10);\n      } else {\n        endTime = Date.now() + task.timer * 3600000; // Convert hours to milliseconds\n        localStorage.setItem(key, endTime.toString());\n      }\n\n      const updateTimer = () => {\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        setRemainingTime(timeLeft);\n\n        // Clear localStorage if timer expires\n        if (timeLeft <= 0) {\n          localStorage.removeItem(key);\n        }\n      };\n\n      // Initial update\n      updateTimer();\n\n      // Update every second\n      const intervalId = setInterval(updateTimer, 1000);\n\n      // Clear interval on component unmount\n      return () => clearInterval(intervalId);\n    }\n  }, [task.timer, task.title]);\n\n  return (\n    <div className={`flex flex-col ${isListInView1 ? \"mr-6\" : \"\"}`}>\n      <div className=\"flex flex-col mb-2\">\n        {dateFormatted && (\n          <time className=\"flex items-center mb-1 text-slate-500 dark:text-slate-400\">\n            <Calendar className=\"mr-2 w-4 sm:w-5\" /> {dateFormatted}\n          </time>\n        )}\n        <span className=\"block font-medium dark:text-slate-200\">\n          {task.title}\n        </span>\n      </div>\n      {task.link && <IconLink link={task.link} />}\n      {task.link1 && <IconLink link={task.link1} />}\n      {task.link2 && <IconLink link={task.link2} />}\n      {task.link3 && <IconLink link={task.link3} />}\n      {task.timer && (\n        <div className=\"mt-2 flex items-center\">\n          <span className=\"text-slate-500 dark:text-slate-400\">Timer:</span>\n          <span className=\"ml-2\">{formatTime(remainingTime)}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InfosTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}