{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\n\n// Utility functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDomainName = url => {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname.replace(/^www\\./, '').split('.').slice(0, -1).join(' ');\n  } catch (error) {\n    console.error(\"Error extracting domain name:\", error);\n    return \"Invalid URL\";\n  }\n};\nconst formatTime = totalSeconds => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor(totalSeconds % 3600 / 60);\n  const seconds = totalSeconds % 60;\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n};\nconst getFaviconUrl = url => {\n  try {\n    const domain = new URL(url).hostname;\n    return `https://${domain}/favicon.ico`;\n  } catch (error) {\n    console.error(\"Error extracting favicon URL:\", error);\n    return \"\";\n  }\n};\nconst InfosTask = _ref => {\n  _s();\n  let {\n    task,\n    isListInView1,\n    onTimerEnd\n  } = _ref;\n  const [remainingTime, setRemainingTime] = useState(0);\n  const dateFormatted = useDate(task.date || \"\");\n  useEffect(() => {\n    var _task$timer;\n    const key = `endTime_${task.title}`;\n    const savedEndTime = localStorage.getItem(key);\n    const endTime = savedEndTime ? parseInt(savedEndTime, 1) : Date.now() + ((_task$timer = task.timer) !== null && _task$timer !== void 0 ? _task$timer : 0) * 60000; // Set to minutes for testing\n\n    if (task.timer) {\n      localStorage.setItem(key, endTime.toString());\n      const updateTimer = () => {\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        setRemainingTime(timeLeft);\n        if (timeLeft <= 0) {\n          localStorage.removeItem(key);\n          if (onTimerEnd) onTimerEnd(task.title);\n        }\n      };\n      updateTimer();\n      const timeoutId = setTimeout(() => {\n        updateTimer();\n      }, 1000); // 1 second delay for testing\n      return () => clearTimeout(timeoutId);\n    }\n  }, [task.timer, task.title, onTimerEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col ${isListInView1 ? \"mr-6\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-2\",\n      children: [dateFormatted && /*#__PURE__*/_jsxDEV(\"time\", {\n        className: \"flex items-center mb-1 text-slate-500 dark:text-slate-400\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"mr-2 w-4 sm:w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), \" \", dateFormatted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center font-medium dark:text-slate-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), task.link && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getFaviconUrl(task.link),\n          alt: \"favicon\",\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), [task.link, task.link1, task.link2, task.link3].map((link, index) => link ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      title: getDomainName(link),\n      className: `block mb-2 text-slate-500 dark:text-slate-500 flex items-center ${isListInView1 ? \"line-clamp-2 sm:line-clamp-1\" : \"line-clamp-3\"}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(link),\n      children: getDomainName(link)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this) : null), task.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-slate-500 dark:text-slate-400\",\n        children: \"Timer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: formatTime(remainingTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(InfosTask, \"a3Njjlt9F/wCB/vdpRTEoD9mcGc=\", false, function () {\n  return [useDate];\n});\n_c = InfosTask;\nexport default InfosTask;\nvar _c;\n$RefreshReg$(_c, \"InfosTask\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","Calendar","useDate","getDomainName","url","hostname","URL","replace","split","slice","join","error","console","formatTime","totalSeconds","hours","Math","floor","minutes","seconds","String","padStart","getFaviconUrl","domain","InfosTask","task","isListInView1","onTimerEnd","remainingTime","setRemainingTime","dateFormatted","date","key","title","savedEndTime","localStorage","getItem","endTime","parseInt","Date","now","timer","setItem","toString","updateTimer","timeLeft","max","removeItem","timeoutId","setTimeout","clearTimeout","link","link1","link2","link3","map","index"],"sources":["/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Task } from \"../../../interfaces\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\n\n// Utility functions\nconst getDomainName = (url: string) => {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname.replace(/^www\\./, '').split('.').slice(0, -1).join(' ');\n  } catch (error) {\n    console.error(\"Error extracting domain name:\", error);\n    return \"Invalid URL\";\n  }\n};\n\nconst formatTime = (totalSeconds: number) => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n};\n\nconst getFaviconUrl = (url: string) => {\n  try {\n    const domain = new URL(url).hostname;\n    return `https://${domain}/favicon.ico`;\n  } catch (error) {\n    console.error(\"Error extracting favicon URL:\", error);\n    return \"\";\n  }\n};\n\ninterface InfosTaskProps {\n  task: Task;\n  isListInView1: boolean;\n  onTimerEnd?: (taskId: string) => void; // New prop\n}\n\nconst InfosTask: React.FC<InfosTaskProps> = ({ task, isListInView1, onTimerEnd }) => {\n  const [remainingTime, setRemainingTime] = useState<number>(0);\n  const dateFormatted = useDate(task.date || \"\");\n\n  useEffect(() => {\n    const key = `endTime_${task.title}`;\n    const savedEndTime = localStorage.getItem(key);\n    const endTime = savedEndTime ? parseInt(savedEndTime, 1) : Date.now() + (task.timer ?? 0) * 60000; // Set to minutes for testing\n  \n    if (task.timer) {\n      localStorage.setItem(key, endTime.toString());\n      const updateTimer = () => {\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        setRemainingTime(timeLeft);\n  \n        if (timeLeft <= 0) {\n          localStorage.removeItem(key);\n          if (onTimerEnd) onTimerEnd(task.title);\n        }\n      };\n  \n      updateTimer();\n      const timeoutId = setTimeout(() => {\n        updateTimer();\n      }, 1000); // 1 second delay for testing\n      return () => clearTimeout(timeoutId);\n    }\n  }, [task.timer, task.title, onTimerEnd]);\n  \n  \n\n  return (\n    <div className={`flex flex-col ${isListInView1 ? \"mr-6\" : \"\"}`}>\n      {/* Container for date and title */}\n      <div className=\"flex flex-col mb-2\">\n        {dateFormatted && (\n          <time className=\"flex items-center mb-1 text-slate-500 dark:text-slate-400\">\n            <Calendar className=\"mr-2 w-4 sm:w-5\" /> {dateFormatted}\n          </time>\n        )}\n        <span className=\"flex items-center font-medium dark:text-slate-200\">\n          <span className=\"mr-2\">{task.title}</span>\n          {task.link && (\n            <img\n              src={getFaviconUrl(task.link)}\n              alt=\"favicon\"\n              className=\"h-6 w-6\"\n            />\n          )}\n        </span>\n      </div>\n      {[task.link, task.link1, task.link2, task.link3].map((link, index) =>\n        link ? (\n          <a\n            key={index}\n            href={link}\n            title={getDomainName(link)}\n            className={`block mb-2 text-slate-500 dark:text-slate-500 flex items-center ${isListInView1 ? \"line-clamp-2 sm:line-clamp-1\" : \"line-clamp-3\"}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            aria-label={getDomainName(link)}\n          >\n            {getDomainName(link)}\n          </a>\n        ) : null\n      )}\n      {task.timer && (\n        <div className=\"mt-2 flex items-center\">\n          <span className=\"text-slate-500 dark:text-slate-400\">Timer:</span>\n          <span className=\"ml-2\">{formatTime(remainingTime)}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InfosTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}