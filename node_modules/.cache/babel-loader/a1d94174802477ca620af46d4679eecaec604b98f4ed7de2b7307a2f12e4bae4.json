{"ast":null,"code":"import _slicedToArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{useAppSelector}from\"../../store/hooks\";var useTodayTasks=function useTodayTasks(){var tasks=useAppSelector(function(state){return state.tasks.tasks;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todaysTasks=_useState2[0],setTodaysTasks=_useState2[1];var date=new Date();var year=date.getFullYear();var month=date.getMonth()+1;var day=date.getDate();var dateTimeFormat=\"\".concat(year,\"-\").concat(month.toString().padStart(2,\"0\"),\"-\").concat(day.toString().padStart(2,\"0\"));useEffect(function(){var filteredTasks=tasks.filter(function(task){return task.date===dateTimeFormat;});setTodaysTasks(filteredTasks);},[dateTimeFormat,tasks]);return todaysTasks;};export default useTodayTasks;","map":{"version":3,"names":["useState","useEffect","useAppSelector","useTodayTasks","tasks","state","todaysTasks","setTodaysTasks","date","Date","year","getFullYear","month","getMonth","day","getDate","dateTimeFormat","toString","padStart","filteredTasks","filter","task"],"sources":["/workspaces/TodoList/src/components/hooks/useTodayTasks.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Task } from \"../../interfaces\";\nimport { useAppSelector } from \"../../store/hooks\";\n\nconst useTodayTasks = (): Task[] => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n  const [todaysTasks, setTodaysTasks] = useState<Task[]>([]);\n\n  const date: Date = new Date();\n  const year: number = date.getFullYear();\n  const month: number = date.getMonth() + 1;\n  const day: number = date.getDate();\n\n  const dateTimeFormat = `${year}-${month.toString().padStart(2, \"0\")}-${day\n    .toString()\n    .padStart(2, \"0\")}`;\n\n  useEffect(() => {\n    let filteredTasks: Task[] = tasks.filter(\n      (task: Task) => task.date === dateTimeFormat\n    );\n    setTodaysTasks(filteredTasks);\n  }, [dateTimeFormat, tasks]);\n  return todaysTasks;\n};\n\nexport default useTodayTasks;\n"],"mappings":"0GAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,OAASC,cAAc,KAAQ,mBAAmB,CAElD,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAiB,CAClC,GAAMC,MAAK,CAAGF,cAAc,CAAC,SAACG,KAAK,QAAKA,MAAK,CAACD,KAAK,CAACA,KAAK,GAAC,CAC1D,cAAsCJ,QAAQ,CAAS,EAAE,CAAC,wCAAnDM,WAAW,eAAEC,cAAc,eAElC,GAAMC,KAAU,CAAG,GAAIC,KAAI,EAAE,CAC7B,GAAMC,KAAY,CAAGF,IAAI,CAACG,WAAW,EAAE,CACvC,GAAMC,MAAa,CAAGJ,IAAI,CAACK,QAAQ,EAAE,CAAG,CAAC,CACzC,GAAMC,IAAW,CAAGN,IAAI,CAACO,OAAO,EAAE,CAElC,GAAMC,eAAc,WAAMN,IAAI,aAAIE,KAAK,CAACK,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,aAAIJ,GAAG,CACvEG,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAE,CAErBjB,SAAS,CAAC,UAAM,CACd,GAAIkB,cAAqB,CAAGf,KAAK,CAACgB,MAAM,CACtC,SAACC,IAAU,QAAKA,KAAI,CAACb,IAAI,GAAKQ,cAAc,GAC7C,CACDT,cAAc,CAACY,aAAa,CAAC,CAC/B,CAAC,CAAE,CAACH,cAAc,CAAEZ,KAAK,CAAC,CAAC,CAC3B,MAAOE,YAAW,CACpB,CAAC,CAED,cAAeH,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}