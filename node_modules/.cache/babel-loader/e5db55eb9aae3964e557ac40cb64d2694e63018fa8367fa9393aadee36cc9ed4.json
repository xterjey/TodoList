{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultTasks = [];\nconst getSavedDirectories = () => {\n  let dirList = [];\n  const storedDirectories = localStorage.getItem(\"directories\");\n  const storedTasks = localStorage.getItem(\"tasks\");\n  if (storedDirectories) {\n    dirList = JSON.parse(storedDirectories);\n    if (!dirList.includes(\"Main\")) {\n      dirList.push(\"Main\");\n    }\n  } else {\n    dirList.push(\"Main\");\n  }\n  if (storedTasks) {\n    const savedTasksList = JSON.parse(storedTasks);\n    const dirNotSaved = savedTasksList.map(task => task.dir).filter(dir => !dirList.includes(dir));\n    dirList = [...dirList, ...dirNotSaved];\n  }\n  return dirList;\n};\nconst initialState = {\n  tasks: localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")) : defaultTasks,\n  directories: getSavedDirectories()\n};\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    addNewTask(state, action) {\n      state.tasks = [action.payload, ...state.tasks];\n    },\n    removeTask(state, action) {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    markAsImportant(state, action) {\n      const task = state.tasks.find(task => task.id === action.payload);\n      if (task) {\n        task.important = !task.important;\n      }\n    },\n    editTask(state, action) {\n      const {\n        id\n      } = action.payload;\n      const index = state.tasks.findIndex(task => task.id === id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    toggleTaskCompleted(state, action) {\n      const task = state.tasks.find(task => task.id === action.payload);\n      if (task) {\n        task.completed = !task.completed;\n      }\n    },\n    deleteAllData(state) {\n      state.tasks = [];\n      state.directories = [\"Main\"];\n    },\n    createDirectory(state, action) {\n      const newDirectory = action.payload;\n      if (!state.directories.includes(newDirectory)) {\n        state.directories = [newDirectory, ...state.directories];\n      }\n    },\n    deleteDirectory(state, action) {\n      const dirName = action.payload;\n      state.directories = state.directories.filter(dir => dir !== dirName);\n      state.tasks = state.tasks.filter(task => task.dir !== dirName);\n    },\n    editDirectoryName(state, action) {\n      const {\n        newDirName,\n        previousDirName\n      } = action.payload;\n      if (!state.directories.includes(newDirName)) {\n        const dirIndex = state.directories.indexOf(previousDirName);\n        if (dirIndex !== -1) {\n          state.directories[dirIndex] = newDirName;\n          state.tasks.forEach(task => {\n            if (task.dir === previousDirName) {\n              task.dir = newDirName;\n            }\n          });\n        }\n      }\n    }\n  }\n});\nexport const tasksActions = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","defaultTasks","getSavedDirectories","dirList","storedDirectories","localStorage","getItem","storedTasks","JSON","parse","includes","push","savedTasksList","dirNotSaved","map","task","dir","filter","initialState","tasks","directories","tasksSlice","name","reducers","addNewTask","state","action","payload","removeTask","id","markAsImportant","find","important","editTask","index","findIndex","toggleTaskCompleted","completed","deleteAllData","createDirectory","newDirectory","deleteDirectory","dirName","editDirectoryName","newDirName","previousDirName","dirIndex","indexOf","forEach","tasksActions","actions","reducer"],"sources":["/home/jayourbae/ToDo-app/src/store/Tasks.store.tsx"],"sourcesContent":["import { Action, createSlice, Dispatch, MiddlewareAPI, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Task } from \"../interfaces\";\n\nconst defaultTasks: Task[] = [];\n\nconst getSavedDirectories = (): string[] => {\n  let dirList: string[] = [];\n  const storedDirectories = localStorage.getItem(\"directories\");\n  const storedTasks = localStorage.getItem(\"tasks\");\n\n  if (storedDirectories) {\n    dirList = JSON.parse(storedDirectories);\n    if (!dirList.includes(\"Main\")) {\n      dirList.push(\"Main\");\n    }\n  } else {\n    dirList.push(\"Main\");\n  }\n\n  if (storedTasks) {\n    const savedTasksList: Task[] = JSON.parse(storedTasks);\n    const dirNotSaved = savedTasksList\n      .map(task => task.dir)\n      .filter(dir => !dirList.includes(dir));\n      \n    dirList = [...dirList, ...dirNotSaved];\n  }\n\n  return dirList;\n};\n\nconst initialState: {\n  tasks: Task[];\n  directories: string[];\n} = {\n  tasks: localStorage.getItem(\"tasks\")\n    ? JSON.parse(localStorage.getItem(\"tasks\")!)\n    : defaultTasks,\n  directories: getSavedDirectories(),\n};\n\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    addNewTask(state, action: PayloadAction<Task>) {\n      state.tasks = [action.payload, ...state.tasks];\n    },\n    removeTask(state, action: PayloadAction<string>) {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    markAsImportant(state, action: PayloadAction<string>) {\n      const task = state.tasks.find(task => task.id === action.payload);\n      if (task) {\n        task.important = !task.important;\n      }\n    },\n    editTask(state, action: PayloadAction<Task>) {\n      const { id } = action.payload;\n      const index = state.tasks.findIndex(task => task.id === id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    toggleTaskCompleted(state, action: PayloadAction<string>) {\n      const task = state.tasks.find(task => task.id === action.payload);\n      if (task) {\n        task.completed = !task.completed;\n      }\n    },\n    deleteAllData(state) {\n      state.tasks = [];\n      state.directories = [\"Main\"];\n    },\n    createDirectory(state, action: PayloadAction<string>) {\n      const newDirectory = action.payload;\n      if (!state.directories.includes(newDirectory)) {\n        state.directories = [newDirectory, ...state.directories];\n      }\n    },\n    deleteDirectory(state, action: PayloadAction<string>) {\n      const dirName = action.payload;\n      state.directories = state.directories.filter(dir => dir !== dirName);\n      state.tasks = state.tasks.filter(task => task.dir !== dirName);\n    },\n    editDirectoryName(\n      state,\n      action: PayloadAction<{ newDirName: string; previousDirName: string }>\n    ) {\n      const { newDirName, previousDirName } = action.payload;\n      if (!state.directories.includes(newDirName)) {\n        const dirIndex = state.directories.indexOf(previousDirName);\n        if (dirIndex !== -1) {\n          state.directories[dirIndex] = newDirName;\n          state.tasks.forEach(task => {\n            if (task.dir === previousDirName) {\n              task.dir = newDirName;\n            }\n          });\n        }\n      }\n    },\n  },\n});\n\nexport const tasksActions = tasksSlice.actions;\nexport default tasksSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}