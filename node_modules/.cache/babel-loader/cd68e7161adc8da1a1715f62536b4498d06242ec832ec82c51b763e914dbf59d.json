{"ast":null,"code":"import _slicedToArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{NavLink,useLocation}from\"react-router-dom\";import{useAppDispatch}from\"../../../store/hooks\";import{tasksActions}from\"../../../store/Tasks.store\";import{ReactComponent as Trash}from\"../../../assets/trash.svg\";import{ReactComponent as Edit}from\"../../../assets/edit.svg\";import ModalConfirm from\"../../Utilities/ModalConfirm\";import ModalDirectory from\"../../Utilities/ModalDirectory\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ItemDirectory=function ItemDirectory(_ref){var dir=_ref.dir,classActive=_ref.classActive;var route=useLocation();var currentPath=route.pathname;var dispatch=useAppDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalIsShown=_useState2[0],setModalIsShown=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalDirIsShown=_useState4[0],setModalDirIsShown=_useState4[1];var closeModalDirectoryHandler=function closeModalDirectoryHandler(){setModalDirIsShown(false);};var deleteDirectoryHandler=function deleteDirectoryHandler(){dispatch(tasksActions.deleteDirectory(dir));};var confirmEditDirNameHandler=function confirmEditDirNameHandler(dirName){dispatch(tasksActions.editDirectoryName({previousDirName:dir,newDirName:dirName}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[modalDirIsShown&&/*#__PURE__*/_jsx(ModalDirectory,{onClose:closeModalDirectoryHandler,onConfirm:confirmEditDirNameHandler,dirName:dir,title:\"Edit directory name\",btnText:\"Edit\"}),modalIsShown&&/*#__PURE__*/_jsx(ModalConfirm,{onClose:function onClose(){return setModalIsShown(false);},onConfirm:deleteDirectoryHandler,text:\"This directory and all its tasks will be deleted.\"}),/*#__PURE__*/_jsxs(\"li\",{className:\"flex items-center pr-4 pl-9 py-2 itemDirectory \".concat(currentPath===\"/dir/\"+dir?classActive:\"\"),children:[/*#__PURE__*/_jsx(NavLink,{to:\"/dir/\".concat(dir),title:dir,className:\"hover:text-rose-600 dark:hover:text-slate-200 transition text-ellipsis whitespace-nowrap overflow-hidden max-w-[7rem]\",children:dir}),dir!==\"Main\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"ml-auto buttonsDir\",children:[/*#__PURE__*/_jsx(\"button\",{title:\"edit directory name\",onClick:function onClick(){return setModalDirIsShown(true);},children:/*#__PURE__*/_jsx(Edit,{className:\"w-5 h-5 mr-2\"})}),/*#__PURE__*/_jsx(\"button\",{title:\"delete directory\",onClick:function onClick(){return setModalIsShown(true);},children:/*#__PURE__*/_jsx(Trash,{className:\"w-5 h-5\"})})]})]})]});};export default ItemDirectory;","map":{"version":3,"names":["React","useState","NavLink","useLocation","useAppDispatch","tasksActions","ReactComponent","Trash","Edit","ModalConfirm","ModalDirectory","ItemDirectory","dir","classActive","route","currentPath","pathname","dispatch","modalIsShown","setModalIsShown","modalDirIsShown","setModalDirIsShown","closeModalDirectoryHandler","deleteDirectoryHandler","deleteDirectory","confirmEditDirNameHandler","dirName","editDirectoryName","previousDirName","newDirName"],"sources":["/workspaces/TodoList/src/components/Menu/Directories/ItemDirectory.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as Trash } from \"../../../assets/trash.svg\";\nimport { ReactComponent as Edit } from \"../../../assets/edit.svg\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\n\nconst ItemDirectory: React.FC<{ dir: string; classActive: string }> = ({\n  dir,\n  classActive,\n}) => {\n  const route = useLocation();\n  const currentPath = route.pathname;\n\n  const dispatch = useAppDispatch();\n\n  const [modalIsShown, setModalIsShown] = useState<boolean>(false);\n  const [modalDirIsShown, setModalDirIsShown] = useState<boolean>(false);\n\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n\n  const deleteDirectoryHandler = () => {\n    dispatch(tasksActions.deleteDirectory(dir));\n  };\n\n  const confirmEditDirNameHandler = (dirName: string) => {\n    dispatch(\n      tasksActions.editDirectoryName({\n        previousDirName: dir,\n        newDirName: dirName,\n      })\n    );\n  };\n\n  return (\n    <>\n      {modalDirIsShown && (\n        <ModalDirectory\n          onClose={closeModalDirectoryHandler}\n          onConfirm={confirmEditDirNameHandler}\n          dirName={dir}\n          title=\"Edit directory name\"\n          btnText=\"Edit\"\n        />\n      )}\n      {modalIsShown && (\n        <ModalConfirm\n          onClose={() => setModalIsShown(false)}\n          onConfirm={deleteDirectoryHandler}\n          text=\"This directory and all its tasks will be deleted.\"\n        />\n      )}\n      <li\n        className={`flex items-center pr-4 pl-9 py-2 itemDirectory ${\n          currentPath === \"/dir/\" + dir ? classActive : \"\"\n        }`}\n      >\n        <NavLink\n          to={`/dir/${dir}`}\n          title={dir}\n          className=\"hover:text-rose-600 dark:hover:text-slate-200 transition text-ellipsis whitespace-nowrap overflow-hidden max-w-[7rem]\"\n        >\n          {dir}\n        </NavLink>\n\n        {dir !== \"Main\" && (\n          <div className=\"ml-auto buttonsDir\">\n            <button\n              title=\"edit directory name\"\n              onClick={() => setModalDirIsShown(true)}\n            >\n              <Edit className=\"w-5 h-5 mr-2\" />\n            </button>\n            <button\n              title=\"delete directory\"\n              onClick={() => setModalIsShown(true)}\n            >\n              <Trash className=\"w-5 h-5\" />\n            </button>\n          </div>\n        )}\n      </li>\n    </>\n  );\n};\n\nexport default ItemDirectory;\n"],"mappings":"0GAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,OAAO,CAAEC,WAAW,KAAQ,kBAAkB,CACvD,OAASC,cAAc,KAAQ,sBAAsB,CACrD,OAASC,YAAY,KAAQ,4BAA4B,CACzD,OAASC,cAAc,GAAIC,MAAK,KAAQ,2BAA2B,CACnE,OAASD,cAAc,GAAIE,KAAI,KAAQ,0BAA0B,CACjE,MAAOC,aAAY,KAAM,8BAA8B,CACvD,MAAOC,eAAc,KAAM,gCAAgC,CAAC,6IAE5D,GAAMC,cAA6D,CAAG,QAAhEA,cAA6D,MAG7D,IAFJC,IAAG,MAAHA,GAAG,CACHC,WAAW,MAAXA,WAAW,CAEX,GAAMC,MAAK,CAAGX,WAAW,EAAE,CAC3B,GAAMY,YAAW,CAAGD,KAAK,CAACE,QAAQ,CAElC,GAAMC,SAAQ,CAAGb,cAAc,EAAE,CAEjC,cAAwCH,QAAQ,CAAU,KAAK,CAAC,wCAAzDiB,YAAY,eAAEC,eAAe,eACpC,eAA8ClB,QAAQ,CAAU,KAAK,CAAC,yCAA/DmB,eAAe,eAAEC,kBAAkB,eAE1C,GAAMC,2BAA0B,CAAG,QAA7BA,2BAA0B,EAAS,CACvCD,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAED,GAAME,uBAAsB,CAAG,QAAzBA,uBAAsB,EAAS,CACnCN,QAAQ,CAACZ,YAAY,CAACmB,eAAe,CAACZ,GAAG,CAAC,CAAC,CAC7C,CAAC,CAED,GAAMa,0BAAyB,CAAG,QAA5BA,0BAAyB,CAAIC,OAAe,CAAK,CACrDT,QAAQ,CACNZ,YAAY,CAACsB,iBAAiB,CAAC,CAC7BC,eAAe,CAAEhB,GAAG,CACpBiB,UAAU,CAAEH,OACd,CAAC,CAAC,CACH,CACH,CAAC,CAED,mBACE,2BACGN,eAAe,eACd,KAAC,cAAc,EACb,OAAO,CAAEE,0BAA2B,CACpC,SAAS,CAAEG,yBAA0B,CACrC,OAAO,CAAEb,GAAI,CACb,KAAK,CAAC,qBAAqB,CAC3B,OAAO,CAAC,MAAM,EAEjB,CACAM,YAAY,eACX,KAAC,YAAY,EACX,OAAO,CAAE,yBAAMC,gBAAe,CAAC,KAAK,CAAC,EAAC,CACtC,SAAS,CAAEI,sBAAuB,CAClC,IAAI,CAAC,mDAAmD,EAE3D,cACD,YACE,SAAS,0DACPR,WAAW,GAAK,OAAO,CAAGH,GAAG,CAAGC,WAAW,CAAG,EAAE,CAC/C,wBAEH,KAAC,OAAO,EACN,EAAE,gBAAUD,GAAG,CAAG,CAClB,KAAK,CAAEA,GAAI,CACX,SAAS,CAAC,uHAAuH,UAEhIA,GAAG,EACI,CAETA,GAAG,GAAK,MAAM,eACb,aAAK,SAAS,CAAC,oBAAoB,wBACjC,eACE,KAAK,CAAC,qBAAqB,CAC3B,OAAO,CAAE,yBAAMS,mBAAkB,CAAC,IAAI,CAAC,EAAC,uBAExC,KAAC,IAAI,EAAC,SAAS,CAAC,cAAc,EAAG,EAC1B,cACT,eACE,KAAK,CAAC,kBAAkB,CACxB,OAAO,CAAE,yBAAMF,gBAAe,CAAC,IAAI,CAAC,EAAC,uBAErC,KAAC,KAAK,EAAC,SAAS,CAAC,SAAS,EAAG,EACtB,GAEZ,GACE,GACJ,CAEP,CAAC,CAED,cAAeR,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}