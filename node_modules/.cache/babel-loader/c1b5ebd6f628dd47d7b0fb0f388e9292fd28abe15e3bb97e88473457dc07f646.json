{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/Menu/Directories/ItemDirectory.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as Trash } from \"../../../assets/trash.svg\";\nimport { ReactComponent as Edit } from \"../../../assets/edit.svg\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemDirectory = _ref => {\n  _s();\n  let {\n    dir,\n    classActive\n  } = _ref;\n  const route = useLocation();\n  const currentPath = route.pathname;\n  const dispatch = useAppDispatch();\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [modalDirIsShown, setModalDirIsShown] = useState(false);\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n  const deleteDirectoryHandler = () => {\n    dispatch(tasksActions.deleteDirectory(dir));\n  };\n  const confirmEditDirNameHandler = dirName => {\n    dispatch(tasksActions.editDirectoryName({\n      previousDirName: dir,\n      newDirName: dirName\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modalDirIsShown && /*#__PURE__*/_jsxDEV(ModalDirectory, {\n      onClose: closeModalDirectoryHandler,\n      onConfirm: confirmEditDirNameHandler,\n      dirName: dir,\n      title: \"Edit directory name\",\n      btnText: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), modalIsShown && /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      onClose: () => setModalIsShown(false),\n      onConfirm: deleteDirectoryHandler,\n      text: \"This directory and all its tasks will be deleted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `flex items-center pr-4 pl-9 py-2 itemDirectory ${currentPath === \"/dir/\" + dir ? classActive : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/dir/${dir}`,\n        title: dir,\n        className: \"hover:text-rose-600 dark:hover:text-slate-200 transition text-ellipsis whitespace-nowrap overflow-hidden max-w-[7rem]\",\n        children: dir\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), dir !== \"Main\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-auto buttonsDir\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"edit directory name\",\n          onClick: () => setModalDirIsShown(true),\n          children: /*#__PURE__*/_jsxDEV(Edit, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"delete directory\",\n          onClick: () => setModalIsShown(true),\n          children: /*#__PURE__*/_jsxDEV(Trash, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ItemDirectory, \"eUrGhmX8o4FMB6RQyL5RznPDcno=\", false, function () {\n  return [useLocation, useAppDispatch];\n});\n_c = ItemDirectory;\nexport default ItemDirectory;\nvar _c;\n$RefreshReg$(_c, \"ItemDirectory\");","map":{"version":3,"names":["React","useState","NavLink","useLocation","useAppDispatch","tasksActions","ReactComponent","Trash","Edit","ModalConfirm","ModalDirectory","ItemDirectory","dir","classActive","route","currentPath","pathname","dispatch","modalIsShown","setModalIsShown","modalDirIsShown","setModalDirIsShown","closeModalDirectoryHandler","deleteDirectoryHandler","deleteDirectory","confirmEditDirNameHandler","dirName","editDirectoryName","previousDirName","newDirName"],"sources":["/home/jayourbae/ToDo-app/src/components/Menu/Directories/ItemDirectory.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store/hooks\";\nimport { tasksActions } from \"../../../store/Tasks.store\";\nimport { ReactComponent as Trash } from \"../../../assets/trash.svg\";\nimport { ReactComponent as Edit } from \"../../../assets/edit.svg\";\nimport ModalConfirm from \"../../Utilities/ModalConfirm\";\nimport ModalDirectory from \"../../Utilities/ModalDirectory\";\n\nconst ItemDirectory: React.FC<{ dir: string; classActive: string }> = ({\n  dir,\n  classActive,\n}) => {\n  const route = useLocation();\n  const currentPath = route.pathname;\n\n  const dispatch = useAppDispatch();\n\n  const [modalIsShown, setModalIsShown] = useState<boolean>(false);\n  const [modalDirIsShown, setModalDirIsShown] = useState<boolean>(false);\n\n  const closeModalDirectoryHandler = () => {\n    setModalDirIsShown(false);\n  };\n\n  const deleteDirectoryHandler = () => {\n    dispatch(tasksActions.deleteDirectory(dir));\n  };\n\n  const confirmEditDirNameHandler = (dirName: string) => {\n    dispatch(\n      tasksActions.editDirectoryName({\n        previousDirName: dir,\n        newDirName: dirName,\n      })\n    );\n  };\n\n  return (\n    <>\n      {modalDirIsShown && (\n        <ModalDirectory\n          onClose={closeModalDirectoryHandler}\n          onConfirm={confirmEditDirNameHandler}\n          dirName={dir}\n          title=\"Edit directory name\"\n          btnText=\"Edit\"\n        />\n      )}\n      {modalIsShown && (\n        <ModalConfirm\n          onClose={() => setModalIsShown(false)}\n          onConfirm={deleteDirectoryHandler}\n          text=\"This directory and all its tasks will be deleted.\"\n        />\n      )}\n      <li\n        className={`flex items-center pr-4 pl-9 py-2 itemDirectory ${\n          currentPath === \"/dir/\" + dir ? classActive : \"\"\n        }`}\n      >\n        <NavLink\n          to={`/dir/${dir}`}\n          title={dir}\n          className=\"hover:text-rose-600 dark:hover:text-slate-200 transition text-ellipsis whitespace-nowrap overflow-hidden max-w-[7rem]\"\n        >\n          {dir}\n        </NavLink>\n\n        {dir !== \"Main\" && (\n          <div className=\"ml-auto buttonsDir\">\n            <button\n              title=\"edit directory name\"\n              onClick={() => setModalDirIsShown(true)}\n            >\n              <Edit className=\"w-5 h-5 mr-2\" />\n            </button>\n            <button\n              title=\"delete directory\"\n              onClick={() => setModalIsShown(true)}\n            >\n              <Trash className=\"w-5 h-5\" />\n            </button>\n          </div>\n        )}\n      </li>\n    </>\n  );\n};\n\nexport default ItemDirectory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}