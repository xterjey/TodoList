{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/Routes/TaskOnly.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskOnly = () => {\n  _s();\n  const params = useParams();\n  const navigate = useNavigate();\n  const tasks = useAppSelector(store => store.tasks.tasks);\n  const [matchedTask, setMatchedTask] = useState([]);\n  useEffect(() => {\n    const taskId = params.taskId;\n    const filteredTask = tasks.filter(task => taskId === task.id);\n    if (!filteredTask.length) {\n      navigate(\"/\");\n    }\n    setMatchedTask(filteredTask);\n  }, [navigate, params.taskId, tasks]);\n  const title = matchedTask.length ? matchedTask[0].title : \"\";\n  useDescriptionTitle(`Searching for ${title}`, \"Task \" + title);\n  return /*#__PURE__*/_jsxDEV(LayoutRoutes, {\n    title: title,\n    tasks: matchedTask\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(TaskOnly, \"qaaBzs7wTigW3Sj6RboTM8aA6Bc=\", false, function () {\n  return [useParams, useNavigate, useAppSelector, useDescriptionTitle];\n});\n_c = TaskOnly;\nexport default TaskOnly;\nvar _c;\n$RefreshReg$(_c, \"TaskOnly\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useAppSelector","useDescriptionTitle","LayoutRoutes","TaskOnly","params","navigate","tasks","store","matchedTask","setMatchedTask","taskId","filteredTask","filter","task","id","length","title"],"sources":["/home/jayourbae/ToDo-app/src/components/Routes/TaskOnly.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Task } from \"../../interfaces\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst TaskOnly: React.FC = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const tasks = useAppSelector((store) => store.tasks.tasks);\n\n  const [matchedTask, setMatchedTask] = useState<Task[]>([]);\n\n  useEffect(() => {\n    const taskId = params.taskId;\n    const filteredTask = tasks.filter((task: Task) => taskId === task.id);\n    if (!filteredTask.length) {\n      navigate(\"/\");\n    }\n    setMatchedTask(filteredTask);\n  }, [navigate, params.taskId, tasks]);\n\n  const title = matchedTask.length ? matchedTask[0].title : \"\";\n\n  useDescriptionTitle(`Searching for ${title}`, \"Task \" + title);\n\n  return <LayoutRoutes title={title} tasks={matchedTask} />;\n};\n\nexport default TaskOnly;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAEzD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AAErD,MAAMC,QAAkB,GAAG,MAAM;EAAA;EAC/B,MAAMC,MAAM,GAAGL,SAAS,EAAE;EAC1B,MAAMM,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,KAAK,GAAGN,cAAc,CAAEO,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAE1D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGN,MAAM,CAACM,MAAM;IAC5B,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAEC,IAAU,IAAKH,MAAM,KAAKG,IAAI,CAACC,EAAE,CAAC;IACrE,IAAI,CAACH,YAAY,CAACI,MAAM,EAAE;MACxBV,QAAQ,CAAC,GAAG,CAAC;IACf;IACAI,cAAc,CAACE,YAAY,CAAC;EAC9B,CAAC,EAAE,CAACN,QAAQ,EAAED,MAAM,CAACM,MAAM,EAAEJ,KAAK,CAAC,CAAC;EAEpC,MAAMU,KAAK,GAAGR,WAAW,CAACO,MAAM,GAAGP,WAAW,CAAC,CAAC,CAAC,CAACQ,KAAK,GAAG,EAAE;EAE5Df,mBAAmB,CAAE,iBAAgBe,KAAM,EAAC,EAAE,OAAO,GAAGA,KAAK,CAAC;EAE9D,oBAAO,QAAC,YAAY;IAAC,KAAK,EAAEA,KAAM;IAAC,KAAK,EAAER;EAAY;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3D,CAAC;AAAC,GAtBIL,QAAkB;EAAA,QACPJ,SAAS,EACPD,WAAW,EAEdE,cAAc,EAe5BC,mBAAmB;AAAA;AAAA,KAnBfE,QAAkB;AAwBxB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}