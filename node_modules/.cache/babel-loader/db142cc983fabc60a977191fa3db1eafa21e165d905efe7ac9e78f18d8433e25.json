{"ast":null,"code":"import _toConsumableArray from\"/workspaces/TodoList/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createSlice}from\"@reduxjs/toolkit\";var defaultTasks=[];var getSavedDirectories=function getSavedDirectories(){var dirList=[];if(localStorage.getItem(\"directories\")){dirList=JSON.parse(localStorage.getItem(\"directories\"));var mainDirExists=dirList.some(function(dir){return dir===\"Main\";});if(!mainDirExists){dirList.push(\"Main\");}}else{dirList.push(\"Main\");}if(localStorage.getItem(\"tasks\")){var savedTasksList=JSON.parse(localStorage.getItem(\"tasks\"));var dirNotSaved=[];savedTasksList.forEach(function(task){if(!dirList.includes(task.dir)){if(!dirNotSaved.includes(task.dir)){dirNotSaved.push(task.dir);}}});dirList=[].concat(_toConsumableArray(dirList),dirNotSaved);}return dirList;};var initialState={tasks:localStorage.getItem(\"tasks\")?JSON.parse(localStorage.getItem(\"tasks\")):defaultTasks,directories:getSavedDirectories()};var tasksSlice=createSlice({name:\"tasks\",initialState:initialState,reducers:{addNewTask:function addNewTask(state,action){state.tasks=[action.payload].concat(_toConsumableArray(state.tasks));},removeTask:function removeTask(state,action){var newTasksList=state.tasks.filter(function(task){return task.id!==action.payload;});state.tasks=newTasksList;},markAsImportant:function markAsImportant(state,action){var newTaskFavorited=state.tasks.find(function(task){return task.id===action.payload;});newTaskFavorited.important=!newTaskFavorited.important;},editTask:function editTask(state,action){var taskId=action.payload.id;var newTaskEdited=state.tasks.find(function(task){return task.id===taskId;});var indexTask=state.tasks.indexOf(newTaskEdited);state.tasks[indexTask]=action.payload;},toggleTaskCompleted:function toggleTaskCompleted(state,action){var taskId=action.payload;var currTask=state.tasks.find(function(task){return task.id===taskId;});currTask.completed=!currTask.completed;},deleteAllData:function deleteAllData(state){state.tasks=[];state.directories=[\"Main\"];},createDirectory:function createDirectory(state,action){var newDirectory=action.payload;var directoryAlreadyExists=state.directories.includes(newDirectory);if(directoryAlreadyExists)return;state.directories=[newDirectory].concat(_toConsumableArray(state.directories));},deleteDirectory:function deleteDirectory(state,action){var dirName=action.payload;state.directories=state.directories.filter(function(dir){return dir!==dirName;});state.tasks=state.tasks.filter(function(task){return task.dir!==dirName;});},editDirectoryName:function editDirectoryName(state,action){var newDirName=action.payload.newDirName;var previousDirName=action.payload.previousDirName;var directoryAlreadyExists=state.directories.includes(newDirName);if(directoryAlreadyExists)return;var dirIndex=state.directories.indexOf(previousDirName);state.directories[dirIndex]=newDirName;state.tasks.forEach(function(task){if(task.dir===previousDirName){task.dir=newDirName;}});}}});export var tasksActions=tasksSlice.actions;export default tasksSlice.reducer;export var tasksMiddleware=function tasksMiddleware(store){return function(next){return function(action){var nextAction=next(action);var actionChangeOnlyDirectories=tasksActions.createDirectory.match(action);var isADirectoryAction=action.type.toLowerCase().includes(\"directory\");if(action.type.startsWith(\"tasks/\")&&!actionChangeOnlyDirectories){var tasksList=store.getState().tasks.tasks;localStorage.setItem(\"tasks\",JSON.stringify(tasksList));}if(action.type.startsWith(\"tasks/\")&&isADirectoryAction){var dirList=store.getState().tasks.directories;localStorage.setItem(\"directories\",JSON.stringify(dirList));}if(tasksActions.deleteAllData.match(action)){localStorage.removeItem(\"tasks\");localStorage.removeItem(\"directories\");localStorage.removeItem(\"darkmode\");}if(tasksActions.removeTask.match(action)){console.log(JSON.parse(localStorage.getItem(\"tasks\")));if(localStorage.getItem(\"tasks\")){var localStorageTasks=JSON.parse(localStorage.getItem(\"tasks\"));if(localStorageTasks.length===0){localStorage.removeItem(\"tasks\");}}}return nextAction;};};};","map":{"version":3,"names":["createSlice","defaultTasks","getSavedDirectories","dirList","localStorage","getItem","JSON","parse","mainDirExists","some","dir","push","savedTasksList","dirNotSaved","forEach","task","includes","initialState","tasks","directories","tasksSlice","name","reducers","addNewTask","state","action","payload","removeTask","newTasksList","filter","id","markAsImportant","newTaskFavorited","find","important","editTask","taskId","newTaskEdited","indexTask","indexOf","toggleTaskCompleted","currTask","completed","deleteAllData","createDirectory","newDirectory","directoryAlreadyExists","deleteDirectory","dirName","editDirectoryName","newDirName","previousDirName","dirIndex","tasksActions","actions","reducer","tasksMiddleware","store","next","nextAction","actionChangeOnlyDirectories","match","isADirectoryAction","type","toLowerCase","startsWith","tasksList","getState","setItem","stringify","removeItem","console","log","localStorageTasks","length"],"sources":["/workspaces/TodoList/src/store/Tasks.store.tsx"],"sourcesContent":["import {\n  Action,\n  createSlice,\n  Dispatch,\n  MiddlewareAPI,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { Task } from \"../interfaces\";\n\nconst defaultTasks: Task[] = [\n\n];\n\nconst getSavedDirectories = (): string[] => {\n  let dirList: string[] = [];\n  if (localStorage.getItem(\"directories\")) {\n    dirList = JSON.parse(localStorage.getItem(\"directories\")!);\n    const mainDirExists = dirList.some((dir: string) => dir === \"Main\");\n    if (!mainDirExists) {\n      dirList.push(\"Main\");\n    }\n  } else {\n    dirList.push(\"Main\");\n  }\n\n  if (localStorage.getItem(\"tasks\")) {\n    const savedTasksList = JSON.parse(localStorage.getItem(\"tasks\")!);\n    let dirNotSaved: string[] = [];\n    savedTasksList.forEach((task: Task) => {\n      if (!dirList.includes(task.dir)) {\n        if (!dirNotSaved.includes(task.dir)) {\n          dirNotSaved.push(task.dir);\n        }\n      }\n    });\n    dirList = [...dirList, ...dirNotSaved];\n  }\n  return dirList;\n};\n\nconst initialState: {\n  tasks: Task[];\n  directories: string[];\n} = {\n  tasks: localStorage.getItem(\"tasks\")\n    ? JSON.parse(localStorage.getItem(\"tasks\")!)\n    : defaultTasks,\n  directories: getSavedDirectories(),\n};\n\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: initialState,\n  reducers: {\n    addNewTask(state, action: PayloadAction<Task>) {\n      state.tasks = [action.payload, ...state.tasks];\n    },\n    removeTask(state, action) {\n      const newTasksList = state.tasks.filter(\n        (task) => task.id !== action.payload\n      );\n      state.tasks = newTasksList;\n    },\n    markAsImportant(state, action: PayloadAction<string>) {\n      const newTaskFavorited = state.tasks.find(\n        (task) => task.id === action.payload\n      );\n      newTaskFavorited!.important = !newTaskFavorited!.important;\n    },\n    editTask(state, action: PayloadAction<Task>) {\n      const taskId = action.payload.id;\n\n      const newTaskEdited: Task = state.tasks.find(\n        (task: Task) => task.id === taskId\n      )!;\n      const indexTask = state.tasks.indexOf(newTaskEdited);\n      state.tasks[indexTask] = action.payload;\n    },\n    toggleTaskCompleted(state, action: PayloadAction<string>) {\n      const taskId = action.payload;\n\n      const currTask = state.tasks.find((task) => task.id === taskId)!;\n\n      currTask.completed = !currTask.completed;\n    },\n    deleteAllData(state) {\n      state.tasks = [];\n      state.directories = [\"Main\"];\n    },\n    createDirectory(state, action: PayloadAction<string>) {\n      const newDirectory: string = action.payload;\n      const directoryAlreadyExists = state.directories.includes(newDirectory);\n      if (directoryAlreadyExists) return;\n      state.directories = [newDirectory, ...state.directories];\n    },\n    deleteDirectory(state, action: PayloadAction<string>) {\n      const dirName = action.payload;\n\n      state.directories = state.directories.filter((dir) => dir !== dirName);\n      state.tasks = state.tasks.filter((task) => task.dir !== dirName);\n    },\n    editDirectoryName(\n      state,\n      action: PayloadAction<{ newDirName: string; previousDirName: string }>\n    ) {\n      const newDirName: string = action.payload.newDirName;\n      const previousDirName: string = action.payload.previousDirName;\n      const directoryAlreadyExists = state.directories.includes(newDirName);\n      if (directoryAlreadyExists) return;\n\n      const dirIndex = state.directories.indexOf(previousDirName);\n\n      state.directories[dirIndex] = newDirName;\n      state.tasks.forEach((task) => {\n        if (task.dir === previousDirName) {\n          task.dir = newDirName;\n        }\n      });\n    },\n  },\n});\n\nexport const tasksActions = tasksSlice.actions;\nexport default tasksSlice.reducer;\n\nexport const tasksMiddleware =\n  (store: MiddlewareAPI) => (next: Dispatch) => (action: Action) => {\n    const nextAction = next(action);\n    const actionChangeOnlyDirectories =\n      tasksActions.createDirectory.match(action);\n\n    const isADirectoryAction: boolean = action.type\n      .toLowerCase()\n      .includes(\"directory\");\n\n    if (action.type.startsWith(\"tasks/\") && !actionChangeOnlyDirectories) {\n      const tasksList = store.getState().tasks.tasks;\n      localStorage.setItem(\"tasks\", JSON.stringify(tasksList));\n    }\n    if (action.type.startsWith(\"tasks/\") && isADirectoryAction) {\n      const dirList = store.getState().tasks.directories;\n      localStorage.setItem(\"directories\", JSON.stringify(dirList));\n    }\n\n    if (tasksActions.deleteAllData.match(action)) {\n      localStorage.removeItem(\"tasks\");\n      localStorage.removeItem(\"directories\");\n      localStorage.removeItem(\"darkmode\");\n    }\n\n    if (tasksActions.removeTask.match(action)) {\n      console.log(JSON.parse(localStorage.getItem(\"tasks\")!));\n      if (localStorage.getItem(\"tasks\")) {\n        const localStorageTasks = JSON.parse(localStorage.getItem(\"tasks\")!);\n        if (localStorageTasks.length === 0) {\n          localStorage.removeItem(\"tasks\");\n        }\n      }\n    }\n    return nextAction;\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}