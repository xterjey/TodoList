{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\n\n// Function to get domain name and replace dots with spaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDomainName = url => {\n  try {\n    const hostname = new URL(url).hostname;\n    // Remove www. prefix if exists\n    const domain = hostname.replace(/^www\\./, '');\n    // Replace dots with spaces\n    return domain.split('.').slice(0, -1).join(' ');\n  } catch (error) {\n    console.error(\"Error extracting domain name:\", error);\n    return \"Invalid URL\";\n  }\n};\n\n// Function to format elapsed time\nconst formatElapsedTime = startTime => {\n  const now = Date.now();\n  const elapsed = now - startTime;\n  const seconds = Math.floor(elapsed / 1000) % 60;\n  const minutes = Math.floor(elapsed / (1000 * 60)) % 60;\n  const hours = Math.floor(elapsed / (1000 * 60 * 60)) % 24;\n  const days = Math.floor(elapsed / (1000 * 60 * 60 * 24));\n  return `${days}d ${hours}h ${minutes}m ${seconds}s`;\n};\nconst InfosTask = _ref => {\n  _s();\n  let {\n    task,\n    isListInView1\n  } = _ref;\n  const [startTime, setStartTime] = useState(() => task.date ? new Date(task.date).getTime() : Date.now());\n  const [elapsedTime, setElapsedTime] = useState(() => formatElapsedTime(startTime));\n  const dateFormatted = useDate(task.date || \"\"); // Handle empty date\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setElapsedTime(formatElapsedTime(startTime));\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [startTime]);\n  const handleStartTimer = () => {\n    setStartTime(Date.now()); // Set the start time to the current time\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col flex-1 ${isListInView1 ? \"mr-6\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center justify-between ${isListInView1 ? \"mb-1\" : \"mb-2\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block font-medium dark:text-slate-200\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link,\n      title: getDomainName(task.link),\n      className: `description mb-2 text-slate-500 dark:text-slate-500 ${isListInView1 ? \"line-clamp-2 sm:line-clamp-1\" : \"line-clamp-3\"}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link),\n      children: getDomainName(task.link)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), task.link1 && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link1,\n      title: getDomainName(task.link1),\n      className: \"block mb-2 text-slate-500 dark:text-slate-500\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link1),\n      children: getDomainName(task.link1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), task.link2 && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link2,\n      title: getDomainName(task.link2),\n      className: \"block mb-2 text-slate-500 dark:text-slate-500\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link2),\n      children: getDomainName(task.link2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), task.link3 && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link3,\n      title: getDomainName(task.link3),\n      className: \"block mb-2 text-slate-500 dark:text-slate-500\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link3),\n      children: getDomainName(task.link3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), dateFormatted && /*#__PURE__*/_jsxDEV(\"time\", {\n      className: \"mt-auto flex w-full\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        className: \"mr-2 w-4 sm:w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), \" \", dateFormatted]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-slate-500 dark:text-slate-500\",\n      children: [\"Elapsed Time: \", elapsedTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartTimer,\n      className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n      children: \"Start Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(InfosTask, \"M6Y3itkEbFMdMyPnZrmzbIJdKSQ=\", false, function () {\n  return [useDate];\n});\n_c = InfosTask;\nexport default InfosTask;\nvar _c;\n$RefreshReg$(_c, \"InfosTask\");","map":{"version":3,"names":["React","useState","useEffect","ReactComponent","Calendar","useDate","getDomainName","url","hostname","URL","domain","replace","split","slice","join","error","console","formatElapsedTime","startTime","now","Date","elapsed","seconds","Math","floor","minutes","hours","days","InfosTask","task","isListInView1","setStartTime","date","getTime","elapsedTime","setElapsedTime","dateFormatted","intervalId","setInterval","clearInterval","handleStartTimer","title","link","link1","link2","link3"],"sources":["/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Task } from \"../../../interfaces\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\n\n// Function to get domain name and replace dots with spaces\nconst getDomainName = (url: string) => {\n  try {\n    const hostname = new URL(url).hostname;\n    // Remove www. prefix if exists\n    const domain = hostname.replace(/^www\\./, '');\n    // Replace dots with spaces\n    return domain.split('.').slice(0, -1).join(' ');\n  } catch (error) {\n    console.error(\"Error extracting domain name:\", error);\n    return \"Invalid URL\";\n  }\n};\n\n// Function to format elapsed time\nconst formatElapsedTime = (startTime: number) => {\n  const now = Date.now();\n  const elapsed = now - startTime;\n  const seconds = Math.floor(elapsed / 1000) % 60;\n  const minutes = Math.floor(elapsed / (1000 * 60)) % 60;\n  const hours = Math.floor(elapsed / (1000 * 60 * 60)) % 24;\n  const days = Math.floor(elapsed / (1000 * 60 * 60 * 24));\n\n  return `${days}d ${hours}h ${minutes}m ${seconds}s`;\n};\n\nconst InfosTask: React.FC<{ task: Task; isListInView1: boolean }> = ({\n  task,\n  isListInView1,\n}) => {\n  const [startTime, setStartTime] = useState(() => task.date ? new Date(task.date).getTime() : Date.now());\n  const [elapsedTime, setElapsedTime] = useState(() => formatElapsedTime(startTime));\n\n  const dateFormatted = useDate(task.date || \"\"); // Handle empty date\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setElapsedTime(formatElapsedTime(startTime));\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [startTime]);\n\n  const handleStartTimer = () => {\n    setStartTime(Date.now()); // Set the start time to the current time\n  };\n\n  return (\n    <div className={`flex flex-col flex-1 ${isListInView1 ? \"mr-6\" : \"\"}`}>\n      <div className={`flex items-center justify-between ${isListInView1 ? \"mb-1\" : \"mb-2\"}`}>\n        <span className=\"block font-medium dark:text-slate-200\">\n          {task.title}\n        </span>\n      </div>\n      <a\n        href={task.link}\n        title={getDomainName(task.link)}\n        className={`description mb-2 text-slate-500 dark:text-slate-500 ${isListInView1 ? \"line-clamp-2 sm:line-clamp-1\" : \"line-clamp-3\"}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        aria-label={getDomainName(task.link)}\n      >\n        {getDomainName(task.link)}\n      </a>\n      {task.link1 && (\n        <a\n          href={task.link1}\n          title={getDomainName(task.link1)}\n          className=\"block mb-2 text-slate-500 dark:text-slate-500\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={getDomainName(task.link1)}\n        >\n          {getDomainName(task.link1)}\n        </a>\n      )}\n      {task.link2 && (\n        <a\n          href={task.link2}\n          title={getDomainName(task.link2)}\n          className=\"block mb-2 text-slate-500 dark:text-slate-500\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={getDomainName(task.link2)}\n        >\n          {getDomainName(task.link2)}\n        </a>\n      )}\n      {task.link3 && (\n        <a\n          href={task.link3}\n          title={getDomainName(task.link3)}\n          className=\"block mb-2 text-slate-500 dark:text-slate-500\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={getDomainName(task.link3)}\n        >\n          {getDomainName(task.link3)}\n        </a>\n      )}\n      {dateFormatted && (\n        <time className=\"mt-auto flex w-full\">\n          <Calendar className=\"mr-2 w-4 sm:w-5\" /> {dateFormatted}\n        </time>\n      )}\n      <div className=\"mt-2 text-slate-500 dark:text-slate-500\">\n        Elapsed Time: {elapsedTime}\n      </div>\n      <button\n        onClick={handleStartTimer}\n        className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n      >\n        Start Timer\n      </button>\n    </div>\n  );\n};\n\nexport default InfosTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}