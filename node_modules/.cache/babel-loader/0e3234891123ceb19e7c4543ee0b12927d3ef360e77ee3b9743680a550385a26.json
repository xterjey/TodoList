{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useScreenMedia = () => {\n  _s();\n  const [mediaQueries, setMediaQueries] = useState({\n    sm: false,\n    md: false,\n    lg: false,\n    xl: false\n  });\n  useEffect(() => {\n    const setNewMediaValues = size => {\n      setMediaQueries(prevState => {\n        const prevStateCopy = {\n          ...prevState\n        };\n        for (const key in prevStateCopy) {\n          prevStateCopy[key] = false;\n        }\n        if (size) return {\n          ...prevStateCopy,\n          [size]: true\n        };\n        return {\n          ...prevStateCopy\n        };\n      });\n    };\n    const checkMediaSize = () => {\n      if (window.innerWidth >= 1280) {\n        setNewMediaValues(\"xl\");\n      } else if (window.innerWidth >= 1024) {\n        setNewMediaValues(\"lg\");\n      } else if (window.innerWidth >= 768) {\n        setNewMediaValues(\"md\");\n      } else if (window.innerWidth >= 640) {\n        setNewMediaValues(\"sm\");\n      } else if (window.innerWidth > 0) {\n        setNewMediaValues();\n      }\n    };\n    checkMediaSize();\n    window.addEventListener(\"resize\", checkMediaSize);\n    return () => window.removeEventListener(\"resize\", checkMediaSize);\n  }, []);\n  return mediaQueries;\n};\n_s(useScreenMedia, \"Sh9SYdOgPHE3kT0Od0Di4adzRSc=\");\nexport default useScreenMedia;","map":{"version":3,"names":["useEffect","useState","useScreenMedia","mediaQueries","setMediaQueries","sm","md","lg","xl","setNewMediaValues","size","prevState","prevStateCopy","key","checkMediaSize","window","innerWidth","addEventListener","removeEventListener"],"sources":["/home/jayourbae/ToDo-app/src/components/hooks/useScreenMedia.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ninterface Query {\n  [key: string]: boolean;\n}\n\nconst useScreenMedia = () => {\n  const [mediaQueries, setMediaQueries] = useState<Query>({\n    sm: false,\n    md: false,\n    lg: false,\n    xl: false,\n  });\n\n  useEffect(() => {\n    const setNewMediaValues = (size?: string) => {\n      setMediaQueries((prevState: Query) => {\n        const prevStateCopy = { ...prevState };\n\n        for (const key in prevStateCopy) {\n          prevStateCopy[key] = false;\n        }\n        if (size) return { ...prevStateCopy, [size]: true };\n        return { ...prevStateCopy };\n      });\n    };\n\n    const checkMediaSize = () => {\n      if (window.innerWidth >= 1280) {\n        setNewMediaValues(\"xl\");\n      } else if (window.innerWidth >= 1024) {\n        setNewMediaValues(\"lg\");\n      } else if (window.innerWidth >= 768) {\n        setNewMediaValues(\"md\");\n      } else if (window.innerWidth >= 640) {\n        setNewMediaValues(\"sm\");\n      } else if (window.innerWidth > 0) {\n        setNewMediaValues();\n      }\n    };\n\n    checkMediaSize();\n    window.addEventListener(\"resize\", checkMediaSize);\n    return () => window.removeEventListener(\"resize\", checkMediaSize);\n  }, []);\n\n  return mediaQueries;\n};\n\nexport default useScreenMedia;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAM3C,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAQ;IACtDI,EAAE,EAAE,KAAK;IACTC,EAAE,EAAE,KAAK;IACTC,EAAE,EAAE,KAAK;IACTC,EAAE,EAAE;EACN,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM;IACd,MAAMS,iBAAiB,GAAIC,IAAa,IAAK;MAC3CN,eAAe,CAAEO,SAAgB,IAAK;QACpC,MAAMC,aAAa,GAAG;UAAE,GAAGD;QAAU,CAAC;QAEtC,KAAK,MAAME,GAAG,IAAID,aAAa,EAAE;UAC/BA,aAAa,CAACC,GAAG,CAAC,GAAG,KAAK;QAC5B;QACA,IAAIH,IAAI,EAAE,OAAO;UAAE,GAAGE,aAAa;UAAE,CAACF,IAAI,GAAG;QAAK,CAAC;QACnD,OAAO;UAAE,GAAGE;QAAc,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC;IAED,MAAME,cAAc,GAAG,MAAM;MAC3B,IAAIC,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;QAC7BP,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM,IAAIM,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;QACpCP,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM,IAAIM,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QACnCP,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM,IAAIM,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QACnCP,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM,IAAIM,MAAM,CAACC,UAAU,GAAG,CAAC,EAAE;QAChCP,iBAAiB,EAAE;MACrB;IACF,CAAC;IAEDK,cAAc,EAAE;IAChBC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,cAAc,CAAC;IACjD,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,cAAc,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOX,YAAY;AACrB,CAAC;AAAC,GAzCID,cAAc;AA2CpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}