{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\n\n// Function to get domain name and replace dots with spaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDomainName = url => {\n  try {\n    const hostname = new URL(url).hostname;\n    // Remove www. prefix if exists\n    const domain = hostname.replace(/^www\\./, '');\n    // Replace dots with spaces\n    return domain.split('.').slice(0, -1).join(' ');\n  } catch (error) {\n    console.error(\"Error extracting domain name:\", error);\n    return \"Invalid URL\";\n  }\n};\n\n// Function to format the timer in hours:minutes:seconds\nconst formatTime = totalSeconds => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor(totalSeconds % 3600 / 60);\n  const seconds = totalSeconds % 60;\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n};\nconst InfosTask = _ref => {\n  _s();\n  let {\n    task,\n    isListInView1\n  } = _ref;\n  const [remainingTime, setRemainingTime] = useState(0);\n  const dateFormatted = useDate(task.date || \"\"); // Handle empty date\n\n  useEffect(() => {\n    if (task.timer) {\n      const savedEndTime = localStorage.getItem(`endTime_${task.title}`);\n      let endTime;\n      if (savedEndTime) {\n        endTime = parseInt(savedEndTime, 10);\n      } else {\n        endTime = Date.now() + task.timer * 3600000; // Convert hours to milliseconds\n        localStorage.setItem(`endTime_${task.title}`, endTime.toString());\n      }\n      const updateTimer = () => {\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        setRemainingTime(timeLeft);\n      };\n\n      // Initial update\n      updateTimer();\n\n      // Update every second\n      const intervalId = setInterval(updateTimer, 1000);\n\n      // Clear interval on component unmount\n      return () => {\n        clearInterval(intervalId);\n        localStorage.removeItem(`endTime_${task.title}`);\n      };\n    }\n  }, [task.timer, task.title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col ${isListInView1 ? \"mr-6\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-2\",\n      children: [dateFormatted && /*#__PURE__*/_jsxDEV(\"time\", {\n        className: \"flex items-center mb-1 text-slate-500 dark:text-slate-400\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"mr-2 w-4 sm:w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \" \", dateFormatted]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block font-medium dark:text-slate-200\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link,\n      title: getDomainName(task.link),\n      className: `description mb-2 text-slate-500 dark:text-slate-500 ${isListInView1 ? \"line-clamp-2 sm:line-clamp-1\" : \"line-clamp-3\"}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link),\n      children: getDomainName(task.link)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), task.link1 && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link1,\n      title: getDomainName(task.link1),\n      className: \"block mb-2 text-slate-500 dark:text-slate-500\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link1),\n      children: getDomainName(task.link1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), task.link2 && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link2,\n      title: getDomainName(task.link2),\n      className: \"block mb-2 text-slate-500 dark:text-slate-500\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link2),\n      children: getDomainName(task.link2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), task.link3 && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: task.link3,\n      title: getDomainName(task.link3),\n      className: \"block mb-2 text-slate-500 dark:text-slate-500\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": getDomainName(task.link3),\n      children: getDomainName(task.link3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), task.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-slate-500 dark:text-slate-400\",\n        children: \"Timer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: formatTime(remainingTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(InfosTask, \"a3Njjlt9F/wCB/vdpRTEoD9mcGc=\", false, function () {\n  return [useDate];\n});\n_c = InfosTask;\nexport default InfosTask;\nvar _c;\n$RefreshReg$(_c, \"InfosTask\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","Calendar","useDate","getDomainName","url","hostname","URL","domain","replace","split","slice","join","error","console","formatTime","totalSeconds","hours","Math","floor","minutes","seconds","String","padStart","InfosTask","task","isListInView1","remainingTime","setRemainingTime","dateFormatted","date","timer","savedEndTime","localStorage","getItem","title","endTime","parseInt","Date","now","setItem","toString","updateTimer","timeLeft","max","intervalId","setInterval","clearInterval","removeItem","link","link1","link2","link3"],"sources":["/home/jayourbae/ToDo-app/src/components/TasksSection/TaskItem/InfosTask.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Task } from \"../../../interfaces\";\nimport { ReactComponent as Calendar } from \"../../../assets/date.svg\";\nimport useDate from \"../../hooks/useDate\";\n\n// Function to get domain name and replace dots with spaces\nconst getDomainName = (url: string) => {\n  try {\n    const hostname = new URL(url).hostname;\n    // Remove www. prefix if exists\n    const domain = hostname.replace(/^www\\./, '');\n    // Replace dots with spaces\n    return domain.split('.').slice(0, -1).join(' ');\n  } catch (error) {\n    console.error(\"Error extracting domain name:\", error);\n    return \"Invalid URL\";\n  }\n};\n\n// Function to format the timer in hours:minutes:seconds\nconst formatTime = (totalSeconds: number) => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n};\n\nconst InfosTask: React.FC<{ task: Task; isListInView1: boolean }> = ({\n  task,\n  isListInView1,\n}) => {\n  const [remainingTime, setRemainingTime] = useState<number>(0);\n  const dateFormatted = useDate(task.date || \"\"); // Handle empty date\n\n  useEffect(() => {\n    if (task.timer) {\n      const savedEndTime = localStorage.getItem(`endTime_${task.title}`);\n      let endTime: number;\n\n      if (savedEndTime) {\n        endTime = parseInt(savedEndTime, 10);\n      } else {\n        endTime = Date.now() + task.timer * 3600000; // Convert hours to milliseconds\n        localStorage.setItem(`endTime_${task.title}`, endTime.toString());\n      }\n\n      const updateTimer = () => {\n        const now = Date.now();\n        const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n        setRemainingTime(timeLeft);\n      };\n\n      // Initial update\n      updateTimer();\n\n      // Update every second\n      const intervalId = setInterval(updateTimer, 1000);\n\n      // Clear interval on component unmount\n      return () => {\n        clearInterval(intervalId);\n        localStorage.removeItem(`endTime_${task.title}`);\n      };\n    }\n  }, [task.timer, task.title]);\n\n  return (\n    <div className={`flex flex-col ${isListInView1 ? \"mr-6\" : \"\"}`}>\n      {/* Container for date and title */}\n      <div className=\"flex flex-col mb-2\">\n        {dateFormatted && (\n          <time className=\"flex items-center mb-1 text-slate-500 dark:text-slate-400\">\n            <Calendar className=\"mr-2 w-4 sm:w-5\" /> {dateFormatted}\n          </time>\n        )}\n        <span className=\"block font-medium dark:text-slate-200\">\n          {task.title}\n        </span>\n      </div>\n      <a\n        href={task.link}\n        title={getDomainName(task.link)}\n        className={`description mb-2 text-slate-500 dark:text-slate-500 ${isListInView1 ? \"line-clamp-2 sm:line-clamp-1\" : \"line-clamp-3\"}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        aria-label={getDomainName(task.link)}\n      >\n        {getDomainName(task.link)}\n      </a>\n      {task.link1 && (\n        <a\n          href={task.link1}\n          title={getDomainName(task.link1)}\n          className=\"block mb-2 text-slate-500 dark:text-slate-500\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={getDomainName(task.link1)}\n        >\n          {getDomainName(task.link1)}\n        </a>\n      )}\n      {task.link2 && (\n        <a\n          href={task.link2}\n          title={getDomainName(task.link2)}\n          className=\"block mb-2 text-slate-500 dark:text-slate-500\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={getDomainName(task.link2)}\n        >\n          {getDomainName(task.link2)}\n        </a>\n      )}\n      {task.link3 && (\n        <a\n          href={task.link3}\n          title={getDomainName(task.link3)}\n          className=\"block mb-2 text-slate-500 dark:text-slate-500\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={getDomainName(task.link3)}\n        >\n          {getDomainName(task.link3)}\n        </a>\n      )}\n      {task.timer && (\n        <div className=\"mt-2 flex items-center\">\n          <span className=\"text-slate-500 dark:text-slate-400\">Timer:</span>\n          <span className=\"ml-2\">{formatTime(remainingTime)}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InfosTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}