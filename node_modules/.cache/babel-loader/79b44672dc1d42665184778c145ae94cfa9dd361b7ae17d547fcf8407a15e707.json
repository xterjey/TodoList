{"ast":null,"code":"var _jsxFileName = \"/home/jayourbae/ToDo-app/src/components/Routes/SearchResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport useSearchQuery from \"../hooks/useSearchQuery\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [currQueryParam, setCurrQueryParam] = useState(\"\");\n  useEffect(() => {\n    const query = searchParams.get(\"q\");\n    if (!query) {\n      // se \"q\" for igual a '' ou \"q\" não existir\n      navigate(\"/\");\n    } else {\n      setCurrQueryParam(query);\n    }\n  }, [navigate, searchParams]);\n  const matchedTasks = useSearchQuery(currQueryParam);\n  const title = `Results for \"${currQueryParam}\"`;\n  useDescriptionTitle(title, title);\n  return /*#__PURE__*/_jsxDEV(LayoutRoutes, {\n    title: title,\n    tasks: matchedTasks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(SearchResults, \"NDEtFe9MkrP3yVkZVGOwtCM/v2Q=\", false, function () {\n  return [useSearchParams, useNavigate, useSearchQuery, useDescriptionTitle];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","useDescriptionTitle","useSearchQuery","LayoutRoutes","SearchResults","searchParams","navigate","currQueryParam","setCurrQueryParam","query","get","matchedTasks","title"],"sources":["/home/jayourbae/ToDo-app/src/components/Routes/SearchResults.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport useDescriptionTitle from \"../hooks/useDescriptionTitle\";\nimport useSearchQuery from \"../hooks/useSearchQuery\";\nimport LayoutRoutes from \"../Utilities/LayoutRoutes\";\n\nconst SearchResults: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const [currQueryParam, setCurrQueryParam] = useState<string>(\"\");\n\n  useEffect(() => {\n    const query = searchParams.get(\"q\");\n    if (!query) {\n      // se \"q\" for igual a '' ou \"q\" não existir\n      navigate(\"/\");\n    } else {\n      setCurrQueryParam(query);\n    }\n  }, [navigate, searchParams]);\n\n  const matchedTasks = useSearchQuery(currQueryParam);\n\n  const title = `Results for \"${currQueryParam}\"`;\n\n  useDescriptionTitle(title, title);\n\n  return <LayoutRoutes title={title} tasks={matchedTasks}></LayoutRoutes>;\n};\n\nexport default SearchResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AAErD,MAAMC,aAAuB,GAAG,MAAM;EAAA;EACpC,MAAM,CAACC,YAAY,CAAC,GAAGL,eAAe,EAAE;EACxC,MAAMM,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAEhED,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGJ,YAAY,CAACK,GAAG,CAAC,GAAG,CAAC;IACnC,IAAI,CAACD,KAAK,EAAE;MACV;MACAH,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLE,iBAAiB,CAACC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACH,QAAQ,EAAED,YAAY,CAAC,CAAC;EAE5B,MAAMM,YAAY,GAAGT,cAAc,CAACK,cAAc,CAAC;EAEnD,MAAMK,KAAK,GAAI,gBAAeL,cAAe,GAAE;EAE/CN,mBAAmB,CAACW,KAAK,EAAEA,KAAK,CAAC;EAEjC,oBAAO,QAAC,YAAY;IAAC,KAAK,EAAEA,KAAM;IAAC,KAAK,EAAED;EAAa;IAAA;IAAA;IAAA;EAAA,QAAgB;AACzE,CAAC;AAAC,GAvBIP,aAAuB;EAAA,QACJJ,eAAe,EACrBD,WAAW,EAcPG,cAAc,EAInCD,mBAAmB;AAAA;AAAA,KApBfG,aAAuB;AAyB7B,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}